{"remainingRequest":"/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/212MonolithFinalSoftwareQuality/theNewsroom/front-end-client/node_modules/babel-loader/lib/index.js!/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/212MonolithFinalSoftwareQuality/theNewsroom/front-end-client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/212MonolithFinalSoftwareQuality/theNewsroom/front-end-client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/212MonolithFinalSoftwareQuality/theNewsroom/front-end-client/src/components/common/SaveTrend.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/212MonolithFinalSoftwareQuality/theNewsroom/front-end-client/src/components/common/SaveTrend.vue","mtime":1605530430596},{"path":"/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/212MonolithFinalSoftwareQuality/theNewsroom/front-end-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/212MonolithFinalSoftwareQuality/theNewsroom/front-end-client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/212MonolithFinalSoftwareQuality/theNewsroom/front-end-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/212MonolithFinalSoftwareQuality/theNewsroom/front-end-client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc2xpY2UiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnN1YiI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9saWFtZGFsZS9PbmVEcml2ZS9VbmkvQ09NUC8yMFQzL2NhcHN0b25lLXByb2plY3QtY29tcDM5MDAtdzE3YS0yMTItbW9ub2xpdGgvMjEyTW9ub2xpdGhGaW5hbFNvZnR3YXJlUXVhbGl0eS90aGVOZXdzcm9vbS9mcm9udC1lbmQtY2xpZW50L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL1VzZXJzL2xpYW1kYWxlL09uZURyaXZlL1VuaS9DT01QLzIwVDMvY2Fwc3RvbmUtcHJvamVjdC1jb21wMzkwMC13MTdhLTIxMi1tb25vbGl0aC8yMTJNb25vbGl0aEZpbmFsU29mdHdhcmVRdWFsaXR5L3RoZU5ld3Nyb29tL2Zyb250LWVuZC1jbGllbnQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgeyBtYXBHZXR0ZXJzLCBtYXBNdXRhdGlvbnMgfSBmcm9tICd2dWV4JzsKaW1wb3J0IENSRUFURV9VU0VSX0NPTkZJRyBmcm9tICcuLi8uLi9ncmFwaHFsL2NyZWF0ZVVzZXJDb25maWd1cmF0aW9uLmdxbCc7CmltcG9ydCBDUkVBVEVfVE9QSUNfQ09ORklHIGZyb20gJy4uLy4uL2dyYXBocWwvY3JlYXRlVG9waWNDb25maWd1cmF0aW9uLmdxbCc7CmV4cG9ydCBkZWZhdWx0IHsKICBwcm9wczogewogICAgdmFsdWU6IEJvb2xlYW4KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB0aXRsZTogbnVsbCwKICAgICAgc2F2ZTogZmFsc2UsCiAgICAgIGNvbmZpZ19pZDogbnVsbAogICAgfTsKICB9LAogIGNvbXB1dGVkOiBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIG1hcEdldHRlcnMoWydnZXRTZWxlY3RlZCddKSksIHt9LCB7CiAgICBzaG93OiB7CiAgICAgIGdldDogZnVuY3Rpb24gZ2V0KCkgewogICAgICAgIHJldHVybiB0aGlzLnZhbHVlOwogICAgICB9LAogICAgICBzZXQ6IGZ1bmN0aW9uIHNldCh2YWx1ZSkgewogICAgICAgIHRoaXMuJGVtaXQoJ2lucHV0JywgdmFsdWUpOwogICAgICB9CiAgICB9CiAgfSksCiAgbWV0aG9kczogX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBtYXBNdXRhdGlvbnMoWydzYXZlVHJlbmQnXSkpLCB7fSwgewogICAgY2xvc2U6IGZ1bmN0aW9uIGNsb3NlKCkgewogICAgICB0aGlzLnNhdmUgPSBmYWxzZTsKICAgICAgdGhpcy4kZW1pdCgnc2F2ZWQnKTsKICAgIH0sCiAgICBzYXZlVHJlbmRTZWxlY3Rpb246IGZ1bmN0aW9uIHNhdmVUcmVuZFNlbGVjdGlvbihjb25maWdOYW1lKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGlmICghKGNvbmZpZ05hbWUubGVuZ3RoID4gMyAmJiBjb25maWdOYW1lLmxlbmd0aCA8PSAyMCAmJiBfdGhpcy5nZXRTZWxlY3RlZC5sZW5ndGggPiAwKSkgewogICAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNTsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgY29uZmlnTmFtZSA9IGNvbmZpZ05hbWUuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkgKyBjb25maWdOYW1lLnNsaWNlKDEpOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDQ7CiAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMuY3JlYXRlVXNlckNvbmZpZyhjb25maWdOYW1lKTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgX3RoaXMuY2xvc2UoKTsKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGNyZWF0ZVVzZXJDb25maWc6IGZ1bmN0aW9uIGNyZWF0ZVVzZXJDb25maWcoY29uZmlnTmFtZSkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICAgIHZhciB1c3JJZDsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgdXNySWQgPSBfdGhpczIuJGF1dGgudXNlci5zdWI7CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDM7CiAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMyLiRhcG9sbG8ubXV0YXRlKHsKICAgICAgICAgICAgICAgICAgbXV0YXRpb246IENSRUFURV9VU0VSX0NPTkZJRywKICAgICAgICAgICAgICAgICAgdmFyaWFibGVzOiB7CiAgICAgICAgICAgICAgICAgICAgY29uZmlnTmFtZTogY29uZmlnTmFtZSwKICAgICAgICAgICAgICAgICAgICB1c3JJZDogdXNySWQKICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUoc3RvcmUsIF9yZWYpIHsKICAgICAgICAgICAgICAgICAgICB2YXIgY3JlYXRlVXNlcmNvbmZpZ3VyYXRpb24gPSBfcmVmLmRhdGEuY3JlYXRlVXNlcmNvbmZpZ3VyYXRpb247CgogICAgICAgICAgICAgICAgICAgIF90aGlzMi5jcmVhdGVUb3BpY0NvbmZpZyhjcmVhdGVVc2VyY29uZmlndXJhdGlvbi51c2VyY29uZmlndXJhdGlvbi5pZCk7CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTIpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBjcmVhdGVUb3BpY0NvbmZpZzogZnVuY3Rpb24gY3JlYXRlVG9waWNDb25maWcodXNyQ29uZmlnSWQpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMygpIHsKICAgICAgICB2YXIgaSwgdG9waWNJZCwgdG9waWNOYW1lOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMyQoX2NvbnRleHQzKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0My5wcmV2ID0gX2NvbnRleHQzLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBpID0gMDsKCiAgICAgICAgICAgICAgY2FzZSAxOgogICAgICAgICAgICAgICAgaWYgKCEoaSA8IF90aGlzMy5nZXRTZWxlY3RlZC5sZW5ndGgpKSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gOTsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgdG9waWNJZCA9IF90aGlzMy5nZXRTZWxlY3RlZFtpXS5pZDsKICAgICAgICAgICAgICAgIHRvcGljTmFtZSA9IF90aGlzMy5nZXRTZWxlY3RlZFtpXS5uYW1lOwogICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSA2OwogICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzMy4kYXBvbGxvLm11dGF0ZSh7CiAgICAgICAgICAgICAgICAgIG11dGF0aW9uOiBDUkVBVEVfVE9QSUNfQ09ORklHLAogICAgICAgICAgICAgICAgICB2YXJpYWJsZXM6IHsKICAgICAgICAgICAgICAgICAgICB1c3JDb25maWdJZDogdXNyQ29uZmlnSWQsCiAgICAgICAgICAgICAgICAgICAgdG9waWNJZDogdG9waWNJZCwKICAgICAgICAgICAgICAgICAgICB0b3BpY05hbWU6IHRvcGljTmFtZQogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgICAgaSsrOwogICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSAxOwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdlbmQgY3JlYXRlIHRvcGljJyk7CgogICAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTMpOwogICAgICB9KSkoKTsKICAgIH0KICB9KQp9Ow=="},{"version":3,"sources":["SaveTrend.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<v-dialog v-model=\"save\" max-width=\"600px\" max-height=\"100px\">\n    <template v-slot:activator=\"{ on, attrs }\">\n        <v-btn depressed rounded v-bind=\"attrs\" v-on=\"on\">\n            Save\n        </v-btn>\n    </template>\n    <v-card class=\"flex-wrap text-justify justify-space-between\">\n        <v-card-title>\n            <span class=\"headline\">Save Trend Selection</span>\n        </v-card-title>\n        <v-card-text>\n            <v-text-field v-model='title' :rules=\"[\n                () => !!title || 'This field is required',\n                () => !!title && this.getSelected.length > 0 || 'Please select a topic first', \n                () => !!title && title.length > 3 || 'Name must have more than 3 characters',\n                () => !!title && title.length <= 25 || 'Name must be less than 20 characters', \n                ]\" placeholder=\"Enter a name for your selection\" counter=\"20\" />\n        </v-card-text>\n        <v-card-actions>\n            <v-spacer />\n            <v-btn depressed rounded @click.stop=\"close\">\n                Close\n            </v-btn>\n            <v-btn depressed rounded @click=\"saveTrendSelection(title)\">\n                Save\n            </v-btn>\n        </v-card-actions>\n    </v-card>\n</v-dialog>\n</template>\n\n<script>\nimport {\n    mapGetters,\n    mapMutations\n} from 'vuex';\n\nimport CREATE_USER_CONFIG from '../../graphql/createUserConfiguration.gql'\nimport CREATE_TOPIC_CONFIG from '../../graphql/createTopicConfiguration.gql'\n\nexport default {\n    props: {\n        value: Boolean\n    },\n    data: () => ({\n        title: null,\n        save: false,\n        config_id: null\n    }),\n    computed: {\n        ...mapGetters(['getSelected']),\n        show: {\n            get() {\n                return this.value\n            },\n            set(value) {\n                this.$emit('input', value)\n            }\n        }\n    },\n    methods: {\n        ...mapMutations([\n            'saveTrend'\n        ]),\n        close() {\n            this.save = false\n            this.$emit('saved');\n        },\n        async saveTrendSelection(configName) {\n            if (configName.length > 3 && configName.length <= 20 && this.getSelected.length > 0) {\n                configName = configName.charAt(0).toUpperCase() + configName.slice(1)\n                await this.createUserConfig(configName)\n                this.close()\n            }\n        },\n        async createUserConfig(configName) {\n            var usrId = this.$auth.user.sub\n            await this.$apollo.mutate({\n                mutation: CREATE_USER_CONFIG,\n                variables: {\n                    configName,\n                    usrId\n                },\n                update: (store, { data: { createUserconfiguration } }) => {\n                    this.createTopicConfig(createUserconfiguration.userconfiguration.id)\n                },\n            })\n        },\n        async createTopicConfig(usrConfigId) {\n            var i\n            for (i = 0; i < this.getSelected.length; i++) {\n                var topicId = this.getSelected[i].id\n                var topicName = this.getSelected[i].name\n                await this.$apollo.mutate({\n                mutation: CREATE_TOPIC_CONFIG,\n                    variables: {\n                        usrConfigId,\n                        topicId,\n                        topicName\n                    }\n                })\n            }\n            console.log('end create topic')\n        }\n    },\n}\n</script>\n"],"sourceRoot":"src/components/common"}]}