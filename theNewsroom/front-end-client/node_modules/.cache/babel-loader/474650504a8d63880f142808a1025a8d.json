{"remainingRequest":"/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/212MonolithFinalSoftwareQuality/theNewsroom/front-end-client/node_modules/babel-loader/lib/index.js!/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/212MonolithFinalSoftwareQuality/theNewsroom/front-end-client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/212MonolithFinalSoftwareQuality/theNewsroom/front-end-client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/212MonolithFinalSoftwareQuality/theNewsroom/front-end-client/src/components/common/Search.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/212MonolithFinalSoftwareQuality/theNewsroom/front-end-client/src/components/common/Search.vue","mtime":1605530430597},{"path":"/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/212MonolithFinalSoftwareQuality/theNewsroom/front-end-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/212MonolithFinalSoftwareQuality/theNewsroom/front-end-client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/212MonolithFinalSoftwareQuality/theNewsroom/front-end-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/212MonolithFinalSoftwareQuality/theNewsroom/front-end-client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL1VzZXJzL2xpYW1kYWxlL09uZURyaXZlL1VuaS9DT01QLzIwVDMvY2Fwc3RvbmUtcHJvamVjdC1jb21wMzkwMC13MTdhLTIxMi1tb25vbGl0aC8yMTJNb25vbGl0aEZpbmFsU29mdHdhcmVRdWFsaXR5L3RoZU5ld3Nyb29tL2Zyb250LWVuZC1jbGllbnQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgeyBtYXBTdGF0ZSwgbWFwTXV0YXRpb25zIH0gZnJvbSAndnVleCc7CmltcG9ydCBQb3B1cCBmcm9tICIuL1BvcHVwIjsKaW1wb3J0IEhlbHBTZWFyY2ggZnJvbSAiLi9IZWxwU2VhcmNoIjsKaW1wb3J0IFNFQVJDSF9GT1JfVE9QSUMgZnJvbSAnLi4vLi4vZ3JhcGhxbC9TZWFyY2hGb3JUb3BpYy5ncWwnOwpleHBvcnQgZGVmYXVsdCB7CiAgcHJvcHM6IHsKICAgIHZhbHVlOiBCb29sZWFuCiAgfSwKICBjb21wb25lbnRzOiB7CiAgICBQb3B1cDogUG9wdXAsCiAgICBIZWxwU2VhcmNoOiBIZWxwU2VhcmNoCiAgfSwKICBjb21wdXRlZDogX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBtYXBTdGF0ZShbJ2tleXdvcmQnXSkpLCB7fSwgewogICAgc2hvdzogewogICAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHsKICAgICAgICByZXR1cm4gdGhpcy52YWx1ZTsKICAgICAgfSwKICAgICAgc2V0OiBmdW5jdGlvbiBzZXQodmFsdWUpIHsKICAgICAgICB0aGlzLiRlbWl0KCdpbnB1dCcsIHZhbHVlKTsKICAgICAgfQogICAgfQogIH0pLAogIG1ldGhvZHM6IF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgbWFwTXV0YXRpb25zKFsnb3BlblRvcGljJ10pKSwge30sIHsKICAgIG9wZW46IGZ1bmN0aW9uIG9wZW4odG9waWMpIHsKICAgICAgdGhpcy5wb3B1cCA9IHRydWU7CiAgICAgIHRoaXMub3BlblRvcGljKHRvcGljKTsKICAgIH0sCiAgICBjbG9zZTogZnVuY3Rpb24gY2xvc2UoKSB7CiAgICAgIHRoaXMuc2hvdyA9IGZhbHNlOwogICAgfSwKICAgIHJvd0NsaWNrZWQ6IGZ1bmN0aW9uIHJvd0NsaWNrZWQodG9waWMpIHsKICAgICAgdGhpcy5vcGVuKHRvcGljKTsKICAgICAgY29uc29sZS5sb2codG9waWMpOwogICAgfQogIH0pLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBwb3B1cDogZmFsc2UsCiAgICAgIHJlc3VsdHM6IFtdLAogICAgICBoZWFkZXJzOiBbewogICAgICAgIHRleHQ6ICcjIEFydGljbGVzJywKICAgICAgICB2YWx1ZTogJ3RvcGljb2ZhcnRpY2xlc0J5VG9waWNJZC50b3RhbENvdW50JywKICAgICAgICB3aWR0aDogIjMwJSIsCiAgICAgICAgYWxpZ246ICdjZW50ZXInCiAgICAgIH0sIHsKICAgICAgICB0ZXh0OiAnVG9waWMnLAogICAgICAgIHZhbHVlOiAnbmFtZScsCiAgICAgICAgd2lkdGg6ICIxMDAlIiwKICAgICAgICBhbGlnbjogJ2NlbnRlcicKICAgICAgfV0KICAgIH07CiAgfSwKICBhcG9sbG86IHsKICAgIHJlc3VsdHM6IHsKICAgICAgcXVlcnk6IFNFQVJDSF9GT1JfVE9QSUMsCiAgICAgIHZhcmlhYmxlczogZnVuY3Rpb24gdmFyaWFibGVzKCkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICBrZXl3b3JkOiB0aGlzLmtleXdvcmQKICAgICAgICB9OwogICAgICB9LAogICAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShkYXRhKSB7CiAgICAgICAgcmV0dXJuIGRhdGEuYWxsVG9waWNzLm5vZGVzOwogICAgICB9CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["Search.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA,SACA,QADA,EAEA,YAFA,QAGA,MAHA;AAKA,OAAA,KAAA,MAAA,SAAA;AACA,OAAA,UAAA,MAAA,cAAA;AAEA,OAAA,gBAAA,MAAA,kCAAA;AAEA,eAAA;AACA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA;AADA,GADA;AAIA,EAAA,UAAA,EAAA;AACA,IAAA,KAAA,EAAA,KADA;AAEA,IAAA,UAAA,EAAA;AAFA,GAJA;AAQA,EAAA,QAAA,kCACA,QAAA,CAAA,CAAA,SAAA,CAAA,CADA;AAEA,IAAA,IAAA,EAAA;AACA,MAAA,GADA,iBACA;AACA,eAAA,KAAA,KAAA;AACA,OAHA;AAIA,MAAA,GAJA,eAIA,KAJA,EAIA;AACA,aAAA,KAAA,CAAA,OAAA,EAAA,KAAA;AACA;AANA;AAFA,IARA;AAmBA,EAAA,OAAA,kCACA,YAAA,CAAA,CACA,WADA,CAAA,CADA;AAIA,IAAA,IAJA,gBAIA,KAJA,EAIA;AACA,WAAA,KAAA,GAAA,IAAA;AACA,WAAA,SAAA,CAAA,KAAA;AACA,KAPA;AAQA,IAAA,KARA,mBAQA;AACA,WAAA,IAAA,GAAA,KAAA;AACA,KAVA;AAWA,IAAA,UAXA,sBAWA,KAXA,EAWA;AACA,WAAA,IAAA,CAAA,KAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,KAAA;AACA;AAdA,IAnBA;AAmCA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,KAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA,EAFA;AAGA,MAAA,OAAA,EAAA,CAAA;AACA,QAAA,IAAA,EAAA,YADA;AAEA,QAAA,KAAA,EAAA,qCAFA;AAGA,QAAA,KAAA,EAAA,KAHA;AAIA,QAAA,KAAA,EAAA;AAJA,OAAA,EAMA;AACA,QAAA,IAAA,EAAA,OADA;AAEA,QAAA,KAAA,EAAA,MAFA;AAGA,QAAA,KAAA,EAAA,MAHA;AAIA,QAAA,KAAA,EAAA;AAJA,OANA;AAHA,KAAA;AAAA,GAnCA;AAoDA,EAAA,MAAA,EAAA;AACA,IAAA,OAAA,EAAA;AACA,MAAA,KAAA,EAAA,gBADA;AAEA,MAAA,SAFA,uBAEA;AACA,eAAA;AACA,UAAA,OAAA,EAAA,KAAA;AADA,SAAA;AAGA,OANA;AAOA,MAAA,MAPA,kBAOA,IAPA,EAOA;AACA,eAAA,IAAA,CAAA,SAAA,CAAA,KAAA;AACA;AATA;AADA;AApDA,CAAA","sourcesContent":["<template>\n<v-dialog d-flex elevation=\"0\" v-model=\"show\" width=\"1000px\" height=\"500px\">\n    <v-card class=\"flex-wrap text-justify justify-space-between\">\n        <v-card-title class=\"headline\"> <strong>Search</strong>: {{this.keyword}}</v-card-title>\n        <v-divider />\n        <h2 class=\"subheading grey--text text-center\" v-if=\"results.length == 0\">Sorry, your search returned no results!</h2>\n        <v-card-actions v-else>\n            <v-flex align-center xs12>\n                <v-data-table :mobile-breakpoint=\"0\" :headers=\"headers\" :items=\"results\" :sort-by=\"['topicofarticlesByTopicId.totalCount']\" :sort-desc=\"[true]\">\n                    <template v-slot:item=\"{ item }\">\n                        <tr @click=\"rowClicked(item)\">\n                            <td class=\"subheading text-center\" v-text=\"item.topicofarticlesByTopicId.totalCount\" />\n                            <td class=\"subheading text-center\" v-text=\"item.name\" />\n                        </tr>\n                    </template>\n                </v-data-table>\n            </v-flex>\n        </v-card-actions>\n        <v-divider />\n        <v-card-actions>\n            <v-row dense>\n                <v-spacer />\n                <v-btn rounded depressed @click.stop=\"close\">\n                    Close\n                </v-btn>\n                <HelpSearch />\n            </v-row>\n        </v-card-actions>\n    </v-card>\n    <Popup v-model=\"popup\" />\n</v-dialog>\n</template>\n\n<script>\nimport {\n    mapState,\n    mapMutations\n} from 'vuex';\n\nimport Popup from \"./Popup\"\nimport HelpSearch from \"./HelpSearch\"\n\nimport SEARCH_FOR_TOPIC from '../../graphql/SearchForTopic.gql'\n\nexport default {\n    props: {\n        value: Boolean\n    },\n    components: {\n        Popup,\n        HelpSearch\n    },\n    computed: {\n        ...mapState(['keyword']),\n        show: {\n            get() {\n                return this.value\n            },\n            set(value) {\n                this.$emit('input', value)\n            }\n        }\n    },\n    methods: {\n        ...mapMutations([\n            'openTopic',\n        ]),\n        open(topic) {\n            this.popup = true\n            this.openTopic(topic)\n        },\n        close() {\n            this.show = false\n        },\n        rowClicked(topic) {\n            this.open(topic)\n            console.log(topic);\n        },\n    },\n    data: () => ({\n        popup: false,\n        results: [],\n        headers: [{\n                text: '# Articles',\n                value: 'topicofarticlesByTopicId.totalCount',\n                width: \"30%\",\n                align: 'center',\n            },\n            {\n                text: 'Topic',\n                value: 'name',\n                width: \"100%\",\n                align: 'center',\n            }\n        ],\n    }),\n    apollo: {\n        results: {\n            query: SEARCH_FOR_TOPIC,\n            variables() {\n                return {\n                    keyword: this.keyword\n                }\n            },\n            update(data) {\n                return data.allTopics.nodes;\n            }\n        }\n    },\n}\n\n</script>\n<style scoped>\n.v-list-item {\n    justify-content: center !important;\n    flex-direction: row !important;\n    text-align: center !important;\n    align-items: center !important;\n}\n.item {\n    background: rgb(243, 245, 245);\n}\n.item:hover {\n    background: rgb(239, 240, 240);\n}\n</style>\n"],"sourceRoot":"src/components/common"}]}