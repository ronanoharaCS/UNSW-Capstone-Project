{"remainingRequest":"/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/212MonolithFinalSoftwareQuality/theNewsroom/front-end-client/node_modules/babel-loader/lib/index.js!/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/212MonolithFinalSoftwareQuality/theNewsroom/front-end-client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/212MonolithFinalSoftwareQuality/theNewsroom/front-end-client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/212MonolithFinalSoftwareQuality/theNewsroom/front-end-client/src/views/Trends.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/212MonolithFinalSoftwareQuality/theNewsroom/front-end-client/src/views/Trends.vue","mtime":1605530430616},{"path":"/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/212MonolithFinalSoftwareQuality/theNewsroom/front-end-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/212MonolithFinalSoftwareQuality/theNewsroom/front-end-client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/212MonolithFinalSoftwareQuality/theNewsroom/front-end-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/212MonolithFinalSoftwareQuality/theNewsroom/front-end-client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Trends.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<div class=\"trends\">\n    <template>\n        <v-container fluid>\n\n            <v-layout wrap>\n                <v-flex xs12 md4>\n                    <!-- For now this filters the datatable, really we want it to produce a popup with possible matches on 'enter', and selecting a match will produce the corresponding topic popup. This field ought to be in the same position of the page on both Topics and Trends, to show continuity -->\n                    <v-card flat tile width='100%'>\n                        <v-list ripple=false expand flat rounded dense>\n\n                            <!-- Search, calendar and media are subgroups in a the group Filters, allowing us to easily modify this entire list as a single element -->\n                            <v-list-group value=\"true\" color=\"none\">\n\n                                <template v-slot:activator>\n                                    <v-list-item-content>\n                                        <v-list-item-title class='font-weight-light list-title'>Filters</v-list-item-title>\n                                    </v-list-item-content>\n                                </template>\n                                <!-- Search -->\n                                <v-list-item>\n                                    <v-text-field @keyup.enter.native=\"searchTopic\" dense rounded filled v-model=\"keyword\" append-icon=\"mdi-magnify\" label=\"Search for a topic\" single-line hide-details />\n                                    <Search v-model=\"search\" />\n                                </v-list-item>\n                                <!-- Calendar -->\n                                 <v-list-item>\n                                    <v-menu ref=\"menu\" v-model=\"menu\" :close-on-content-click=\"false\" :return-value.sync=\"dates\" transition=\"scale-transition\" offset-y min-width=\"290px\">\n                                        <template v-slot:activator=\"{ on, attrs }\">\n                                            <v-text-field dense rounded filled v-model=\"dateRange\" label=\"Select time period\" append-icon=\"mdi-calendar\" single-line hide-details readonly v-bind=\"attrs\" v-on=\"on\" />\n                                        </template>\n                                        <v-date-picker v-model=\"dates\" :max='todaysDate' range no-title scrollable>\n                                            <v-spacer />\n                                            <v-btn text color=\"primary\" @click=\"saveDates\">\n                                                OK\n                                            </v-btn>\n                                        </v-date-picker>\n                                    </v-menu>\n                                </v-list-item>\n                            </v-list-group>\n                            <!-- Selected, Related and Saved topics are also presented as groups in the List, allowing us to open and close them easily to show their internal components. Selected is set to true so that it is shown automatically, whilst the others are closed by default -->\n                            <v-list-group value=\"true\" color=\"none\">\n                                <template v-slot:activator>\n                                    <v-list-item-content>\n                                        <v-list-item-title class='font-weight-light list-title'>Selected Topics</v-list-item-title>\n                                    </v-list-item-content>\n                                </template>\n                                <v-list-item-group value=\"true\" color=\"none\">\n                                    <v-list-item class='item' v-for=\"(item, index) in getSelected\" :key=\"index\" >\n                                        <v-list-item-title @click='open(item)' v-text=\"item.name\" />\n                                        <v-icon v-if='index == 0' color=\"#FF42DC\">mdi-circle</v-icon>\n                                        <v-icon v-if='index == 1' color=\"#0096DB\">mdi-circle</v-icon>\n                                        <v-icon v-if='index == 2' color=\"#FF9D00\">mdi-circle</v-icon>\n                                        <v-icon v-if='index == 3' color='#66DB00'>mdi-circle</v-icon>\n                                        <v-icon v-if='index == 4' color=\"#DB0004\">mdi-circle</v-icon>\n                                        <v-btn icon @click='removeSelected(item)'>\n                                            <v-icon color=\"grey lighten-1\">mdi-minus-circle</v-icon>\n                                        </v-btn>\n                                    </v-list-item>\n                                </v-list-item-group>\n                            </v-list-group>\n                            <v-list-group color=\"none\">\n                                <template v-slot:activator>\n                                    <v-list-item-content>\n                                        <v-list-item-title class='font-weight-light list-title'>Related Topics</v-list-item-title>\n                                    </v-list-item-content>\n                                </template>\n                                <v-list-item-group color=\"none\">\n                                    <v-list-item  class='item' v-for=\"item in related_topics\" :key=\"item.id\">\n                                        <v-list-item-title @click='open(item)' v-text=\"item.name\" />\n                                        <v-btn icon @click='add(item)'>\n                                            <v-icon color=\"grey lighten-1\">mdi-plus-circle</v-icon>\n                                        </v-btn>\n                                    </v-list-item>\n                                </v-list-item-group>\n                            </v-list-group>\n                            <template v-if=\"!$auth.loading & $auth.isAuthenticated\">\n                                <v-list-group color=\"none\">\n                                    <template v-slot:activator>\n                                        <v-list-item-content>\n                                            <v-list-item-title class='font-weight-light list-title'>Saved Trends</v-list-item-title>\n                                        </v-list-item-content>\n                                    </template>\n                                    <v-list-item-group color=\"none\">\n                                        <v-list-item class='item' v-for=\"config in configs\" :key=\"config.id\" @click=\"setSelected(config.topics)\">\n                                            <v-list-item-title v-text=\" config.title\" />\n                                        </v-list-item>\n                                    </v-list-item-group>\n                                </v-list-group>\n                            </template>\n                            <v-list-item>\n                                <v-spacer />\n                                <SaveTrend v-if=\"!$auth.loading & $auth.isAuthenticated\" v-on:saved=\"getConfigs()\"/>\n                                <v-btn rounded depressed @click=\"reset\">\n                                    Reset </v-btn>\n                                <HelpTrends />\n                            </v-list-item>\n                        </v-list>\n                    </v-card>\n                </v-flex>\n                <v-spacer />\n                <v-flex align-center xs12 md8>\n                    <template>\n                        <div>\n                            <apexchart type=\"line\" :options=\"options\" :series=\"trends\"></apexchart>\n                        </div>\n                    </template>\n                </v-flex>\n                <Popup v-model=\"popup\" />\n                <Replace v-model=\"replace\" />\n                <v-col />\n            </v-layout>\n        </v-container>\n    </template>\n\n</div>\n</template>\n\n<script>\nimport Popup from \"../components/common/Popup\";\nimport Replace from \"../components/common/Replace\";\nimport SaveTrend from \"../components/common/SaveTrend\";\nimport HelpTrends from \"../components/common/HelpTrends\";\nimport Search from \"../components/common/Search\"\nimport {\n    mapGetters,\n    mapState,\n    mapMutations\n} from 'vuex';\nimport ALL_TOPICS_WITH_FILTER from '../graphql/TopicsAndArticleCount.gql'\nimport TOPIC_ARTICLES_DATE from '../graphql/TopicArticlesByDate.gql'\nimport USER_CONFIGS from \"../graphql/AllOfAUsersConfigurations.gql\"\nexport default {\n    name: \"Trends\",\n    components: {\n        Popup,\n        SaveTrend,\n        HelpTrends,\n        Search,\n        Replace\n    },\n    data: () => ({\n        search: false,\n        popup: false,\n        start_date: null,\n        end_date: null,\n        dates: [],\n        keyword: '',\n        menu: false,\n        related_topics: [],\n        configs: [],\n        result: null,\n        trends: [],\n        date: null,\n        topic_id: null,\n        usr_id: '',\n        skipQuery: true,\n        replace: false,\n        options: {\n            stroke: {\n                curve: 'smooth',\n            },\n            colors: [\n                '#FF42DC', '#0096DB', '#FF9D00', '#66DB00', '#DB0004', \n            ],\n            xaxis: {\n                type: 'datetime'\n            },\n            yaxis: {\n                label: {\n                    text: 'Number of Articles'\n                },\n                min: 0,\n                forceNiceScale: true\n            },\n            tooltip: {\n                enabled: true,\n                followCursor: true,\n                shared: true,\n            },\n            markers: {\n                size: 0,\n                hover: {\n                    sizeOffset: 6\n                }\n            },\n            grid: {\n                borderColor: '#f1f1f1',\n            },\n            legend: {\n                horizontalAlign: 'center',\n                position: 'bottom',\n                onItemHover: {\n                    highlightDataSeries: true\n                },\n            },\n            noData: {\n                text: 'Select topics to see how they trend over time!',\n                align: 'center',\n                verticalAlign: 'middle',\n                offsetX: 0,\n                offsetY: 0,\n                style: {\n                    color: undefined,\n                    fontSize: '14px',\n                    fontFamily: undefined\n                }\n            },\n            chart: {\n                selection: {\n                    enabled: true\n                },\n                toolbar: {\n                    show: true,\n                    offsetX: 0,\n                    offsetY: 0,\n                    tools: {\n                        download: true,\n                        selection: false,\n                        zoom: false,\n                        zoomin: true,\n                        zoomout: true,\n                        pan: true,\n                        reset: true,\n                        customIcons: []\n                    },\n                    export: {\n                        csv: {\n                            filename: undefined,\n                            columnDelimiter: ',',\n                            headerCategory: 'category',\n                            headerValue: 'value',\n                            dateFormatter(timestamp) {\n                                return new Date(timestamp).toDateString()\n                            }\n                        }\n                    },\n                    autoSelected: 'zoom'\n                },\n            },\n        },\n    }),\n    watch: {\n        getSelected: {\n            handler: function() {\n                this.callTrends()\n                if (this.getSelected.length == 0) {\n                    this.trends = []\n                }\n            },\n        },\n    },\n    apollo: {\n        related_topics: {\n            query: ALL_TOPICS_WITH_FILTER,\n            variables() {\n                return {\n                    limit: 5\n                }\n            },\n            update(data) {\n                return data.allTopics.nodes.map(a => ({\n                    id: a.id,\n                    name: a.name\n                }));\n            }\n        },\n        result: {\n            query: TOPIC_ARTICLES_DATE,\n            variables() {\n                return {\n                    topicId: this.topic_id,\n                    startdate: this.start_date,\n                    enddate: this.end_date\n                }\n            },\n            update(data) {\n                var result = {\n                    name: data.topicById.name, \n                    data: data.aggregatearticlecountbydays.nodes.map(a => ({\n                        x: a.x,\n                        y: a.y\n                    }))}\n                let index = this.trends.findIndex(item => item.name == result.name)\n                if (index == -1 ) {\n                    this.trends.push(result)\n                } else {\n                    this.trends[index] = result\n                }\n                this.checkRemove()\n            },\n            skip() {\n                return this.skipQuery\n            },\n        },\n        configs: {\n            query: USER_CONFIGS,\n            variables() {\n                var id\n                if (!this.$auth.loading && this.$auth.isAuthenticated) {\n                    id = this.$auth.user.sub\n                } else {\n                    id = ''\n                }\n                return {\n                    usrId: id\n                }\n            },\n            update(data) {\n                return data.allUserconfigurations.nodes.map(a => ({\n                    id: a.id,\n                    title: a.configName,\n                    topics: a.topicconfigurationsByUsrConfigId.nodes.map(b => ({\n                        id: b.topicId,\n                        name: b.topicName\n                    }))\n                }))\n            },\n            skip() {\n                return this.skipQuery\n            },\n        }\n    },\n    methods: {\n        checkRemove() {\n            if (this.getSelected.length != this.trends.length){\n                var i\n                for (i = 0; i < this.trends.length; i++) {\n                    let index = this.getSelected.findIndex(item => item.name == this.trends[i].name)\n                    if (index == -1) {\n                        this.trends.splice(index, 1)\n                    }\n                }\n            }\n        },\n        async callTrends() {\n            console.log(\"Fetching trend data for\", this.dateRange)\n            var i\n            for (i = 0; i < this.getSelected.length; i++) {\n                this.topic_id =  this.getSelected[i].id\n                this.$apollo.queries.result.skip = false\n                await this.$apollo.queries.result.refetch()\n            }\n            // This line is not redundant. It refreshes the value, particularly useful for automatically updating the graph when dates are changed.\n            this.trends = this.trends.map(a => a)\n            console.log('Trend data fetched.')\n        },\n        formatDate(date) {\n            let month = `${date.getMonth() + 1}`;\n            let day = `${date.getDate()}`;\n            const year = date.getFullYear();\n            if (month.length < 2) month = `0${month}`;\n            if (day.length < 2) day = `0${day}`;\n            return [year, month, day].join('-');\n        },\n        ...mapMutations([\n            'addSelected',\n            'removeSelected',\n            'openTopic',\n            'setSelected',\n            'emptySelected',\n            'searchTopicKeyword'\n        ]),\n        open(topic) {\n            this.popup = true\n            this.openTopic(topic)\n        },\n       saveDates() {\n            this.$refs.menu.save(this.dates)\n            if (this.dates[0] < this.dates[1]) {\n                this.start_date = this.dates[0]\n                this.end_date = this.dates[1]\n            } else {\n                this.start_date = this.dates[1]\n                this.end_date = this.dates[0]\n            }\n            this.dates = [this.start_date, this.end_date]\n            this.callTrends()\n        },\n        searchTopic() {\n            if (this.keyword != '') {\n                this.search = true\n                this.searchTopicKeyword(this.keyword)\n            }\n        },\n        reset() {\n            this.dates = []\n            this.end_date = new Date()\n            this.start_date = new Date()\n            this.start_date.setMonth(this.end_date.getMonth() - 1)\n            this.start_date = this.start_date.toISOString().slice(0, 10)                    \n            this.end_date = this.end_date.toISOString().slice(0, 10)\n            this.dates = [this.start_date, this.end_date]\n            this.emptySelected()\n        },\n        add(topic) {\n            if (this.numSelected == 5) {\n                this.replace = true\n            } else {\n                this.addSelected(topic)\n            }\n        },\n        async getConfigs() {\n            this.$apollo.queries.configs.skip = false\n            await this.$apollo.queries.configs.refetch()\n            console.log(\"Configurations fetched.\")\n        },\n    },\n    mounted: function() {\n        if (this.start_date == null) {\n            this.end_date = new Date()\n            this.start_date = new Date()\n            this.start_date.setMonth(this.end_date.getMonth() - 1)\n            this.start_date = this.start_date.toISOString().slice(0, 10)                    \n            this.end_date = this.end_date.toISOString().slice(0, 10)\n        }\n        this.dates = [this.start_date, this.end_date]\n        if (!this.$auth.loading && this.$auth.isAuthenticated) {\n            this.usr_id = this.$auth.user.sub\n        }\n        this.callTrends()\n        this.getConfigs()\n        console.log(\"Mounted\")\n    },\n    computed: {\n        ...mapState(['selected', 'related']),\n        ...mapGetters(['numSelected', 'getSelected', 'getRelated']),\n        todaysDate() {\n            const today = new Date();\n            return this.formatDate(today);\n        },\n        dateRange() {\n            return this.dates.join(' to ')\n        },\n    }\n}\n</script>\n\n<style scoped>\ntd {\n    text-align: center !important;\n}\n.list-title {\n    font-size: 16px !important;\n}\n.item {\n    background: [];\n}\n.item:hover {\n    background: ghostwhite;\n}\n</style>"],"sourceRoot":"src/views"}]}