{"remainingRequest":"/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/theNewsroom/front-end-client/node_modules/babel-loader/lib/index.js!/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/theNewsroom/front-end-client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/theNewsroom/front-end-client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/theNewsroom/front-end-client/src/views/Saved.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/theNewsroom/front-end-client/src/views/Saved.vue","mtime":1605525118641},{"path":"/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/theNewsroom/front-end-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/theNewsroom/front-end-client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/theNewsroom/front-end-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/theNewsroom/front-end-client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zdWIiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZSI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICIvVXNlcnMvbGlhbWRhbGUvT25lRHJpdmUvVW5pL0NPTVAvMjBUMy9jYXBzdG9uZS1wcm9qZWN0LWNvbXAzOTAwLXcxN2EtMjEyLW1vbm9saXRoL3RoZU5ld3Nyb29tL2Zyb250LWVuZC1jbGllbnQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgX29iamVjdFNwcmVhZCBmcm9tICIvVXNlcnMvbGlhbWRhbGUvT25lRHJpdmUvVW5pL0NPTVAvMjBUMy9jYXBzdG9uZS1wcm9qZWN0LWNvbXAzOTAwLXcxN2EtMjEyLW1vbm9saXRoL3RoZU5ld3Nyb29tL2Zyb250LWVuZC1jbGllbnQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgUG9wdXAgZnJvbSAiLi4vY29tcG9uZW50cy9jb21tb24vUG9wdXAiOwppbXBvcnQgSGVscFNhdmVkIGZyb20gIi4uL2NvbXBvbmVudHMvY29tbW9uL0hlbHBTYXZlZCI7CmltcG9ydCBVU0VSX0NPTkZJR1MgZnJvbSAiLi4vZ3JhcGhxbC9BbGxPZkFVc2Vyc0NvbmZpZ3VyYXRpb25zLmdxbCI7CmltcG9ydCBERUxFVEVfVVNFUl9DT05GSUcgZnJvbSAiLi4vZ3JhcGhxbC9kZWxldGVVc2VyQ29uZmlndXJhdGlvbi5ncWwiOwppbXBvcnQgREVMRVRFX1RPUElDX0NPTkZJRyBmcm9tICIuLi9ncmFwaHFsL2RlbGV0ZVRvcGljQ29uZmlndXJhdGlvbi5ncWwiOwppbXBvcnQgeyBtYXBNdXRhdGlvbnMsIG1hcEdldHRlcnMgfSBmcm9tICd2dWV4JzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJUb3BpY3MiLAogIGNvbXBvbmVudHM6IHsKICAgIFBvcHVwOiBQb3B1cCwKICAgIEhlbHBTYXZlZDogSGVscFNhdmVkCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgdHJlbmQ6IHsKICAgICAgICB0aXRsZTogJycsCiAgICAgICAgdG9waWNzOiBbXQogICAgICB9LAogICAgICBkaWFsb2c6IGZhbHNlLAogICAgICBwb3B1cDogZmFsc2UsCiAgICAgIHVzZXJJZDogJycsCiAgICAgIGNvbmZpZ3M6IFtdLAogICAgICBza2lwUXVlcnk6IGZhbHNlCiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IF9vYmplY3RTcHJlYWQoe30sIG1hcEdldHRlcnMoWydudW1TZWxlY3RlZCcsICdnZXRTZWxlY3RlZCcsICdnZXRSZWxhdGVkJ10pKSwKICBhcG9sbG86IHsKICAgIGNvbmZpZ3M6IHsKICAgICAgcXVlcnk6IFVTRVJfQ09ORklHUywKICAgICAgdmFyaWFibGVzOiBmdW5jdGlvbiB2YXJpYWJsZXMoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIHVzcklkOiB0aGlzLiRhdXRoLnVzZXIuc3ViCiAgICAgICAgfTsKICAgICAgfSwKICAgICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUoZGF0YSkgewogICAgICAgIHJldHVybiBkYXRhLmFsbFVzZXJjb25maWd1cmF0aW9ucy5ub2Rlcy5tYXAoZnVuY3Rpb24gKGEpIHsKICAgICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIGlkOiBhLmlkLAogICAgICAgICAgICB0aXRsZTogYS5jb25maWdOYW1lLAogICAgICAgICAgICB0b3BpY3M6IGEudG9waWNjb25maWd1cmF0aW9uc0J5VXNyQ29uZmlnSWQubm9kZXMubWFwKGZ1bmN0aW9uIChiKSB7CiAgICAgICAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgICAgIG5vZGVJZDogYi5pZCwKICAgICAgICAgICAgICAgIGlkOiBiLnRvcGljSWQsCiAgICAgICAgICAgICAgICBuYW1lOiBiLnRvcGljTmFtZQogICAgICAgICAgICAgIH07CiAgICAgICAgICAgIH0pCiAgICAgICAgICB9OwogICAgICAgIH0pOwogICAgICB9LAogICAgICBza2lwOiBmdW5jdGlvbiBza2lwKCkgewogICAgICAgIHJldHVybiB0aGlzLnNraXBRdWVyeTsKICAgICAgfQogICAgfQogIH0sCiAgbWV0aG9kczogX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBtYXBNdXRhdGlvbnMoWydvcGVuVG9waWMnLCAnc2V0U2VsZWN0ZWQnXSkpLCB7fSwgewogICAgb3BlbjogZnVuY3Rpb24gb3Blbih0aXRsZSkgewogICAgICB0aGlzLnBvcHVwID0gdHJ1ZTsKICAgICAgdGhpcy5vcGVuVG9waWModGl0bGUpOwogICAgfSwKICAgIHZpZXdUcmVuZHM6IGZ1bmN0aW9uIHZpZXdUcmVuZHMoc2VsZWN0aW9uKSB7CiAgICAgIGNvbnNvbGUubG9nKHNlbGVjdGlvbik7CiAgICAgIHNlbGVjdGlvbiA9IHNlbGVjdGlvbi5tYXAoZnVuY3Rpb24gKGEpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgaWQ6IGEuaWQsCiAgICAgICAgICBuYW1lOiBhLm5hbWUKICAgICAgICB9OwogICAgICB9KTsKICAgICAgdGhpcy5zZXRTZWxlY3RlZChzZWxlY3Rpb24pOwogICAgICB0aGlzLiRyb3V0ZXIucHVzaCh7CiAgICAgICAgbmFtZTogJ3RyZW5kcycKICAgICAgfSk7CiAgICB9LAogICAgZ2V0Q29uZmlnczogZnVuY3Rpb24gZ2V0Q29uZmlncygpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX3RoaXMuJGFwb2xsby5xdWVyaWVzLmNvbmZpZ3Muc2tpcCA9IGZhbHNlOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM7CiAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMuJGFwb2xsby5xdWVyaWVzLmNvbmZpZ3MucmVmZXRjaCgpOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgZGVsZXRlVHJlbmQ6IGZ1bmN0aW9uIGRlbGV0ZVRyZW5kKHNlbGVjdGlvbikgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygiRGVsZXRpbmcgc2F2ZWQgY29uZ2lmdXJhdGlvbi4uLiIpOwogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAzOwogICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzMi5kZWxldGVUb3BpY0NvbmZpZyhzZWxlY3Rpb24udG9waWNzKTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA1OwogICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzMi5kZWxldGVVc2VyQ29uZmlnKHNlbGVjdGlvbi5pZCk7CgogICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCJTYXZlZCBjb25naWZ1cmF0aW9uIGRlbGV0ZWQiKTsKCiAgICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgZGVsZXRlVG9waWNDb25maWc6IGZ1bmN0aW9uIGRlbGV0ZVRvcGljQ29uZmlnKHRvcGljcykgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKCkgewogICAgICAgIHZhciBpLCBpZDsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgZm9yIChpID0gMDsgaSA8IHRvcGljcy5sZW5ndGg7IGkrKykgewogICAgICAgICAgICAgICAgICBpZCA9IHRvcGljc1tpXS5ub2RlSWQ7CgogICAgICAgICAgICAgICAgICBfdGhpczMuJGFwb2xsby5tdXRhdGUoewogICAgICAgICAgICAgICAgICAgIG11dGF0aW9uOiBERUxFVEVfVE9QSUNfQ09ORklHLAogICAgICAgICAgICAgICAgICAgIHZhcmlhYmxlczogewogICAgICAgICAgICAgICAgICAgICAgaWQ6IGlkCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgY2FzZSAxOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUzKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgZGVsZXRlVXNlckNvbmZpZzogZnVuY3Rpb24gZGVsZXRlVXNlckNvbmZpZyhpZCkgewogICAgICB2YXIgX3RoaXM0ID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU0KCkgewogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNCQoX2NvbnRleHQ0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0NC5wcmV2ID0gX2NvbnRleHQ0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfdGhpczQuJGFwb2xsby5tdXRhdGUoewogICAgICAgICAgICAgICAgICBtdXRhdGlvbjogREVMRVRFX1VTRVJfQ09ORklHLAogICAgICAgICAgICAgICAgICB2YXJpYWJsZXM6IHsKICAgICAgICAgICAgICAgICAgICBpZDogaWQKICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUoKSB7CiAgICAgICAgICAgICAgICAgICAgX3RoaXM0LmdldENvbmZpZ3MoKTsKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlNCk7CiAgICAgIH0pKSgpOwogICAgfQogIH0pLAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB0aGlzLmdldENvbmZpZ3MoKTsKICB9Cn07"},{"version":3,"sources":["Saved.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA,OAAA,KAAA,MAAA,4BAAA;AACA,OAAA,SAAA,MAAA,gCAAA;AACA,OAAA,YAAA,MAAA,0CAAA;AACA,OAAA,kBAAA,MAAA,wCAAA;AACA,OAAA,mBAAA,MAAA,yCAAA;AAGA,SACA,YADA,EAEA,UAFA,QAGA,MAHA;AAKA,eAAA;AACA,EAAA,IAAA,EAAA,QADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,KAAA,EAAA,KADA;AAEA,IAAA,SAAA,EAAA;AAFA,GAFA;AAMA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,KAAA,EAAA;AACA,QAAA,KAAA,EAAA,EADA;AAEA,QAAA,MAAA,EAAA;AAFA,OADA;AAKA,MAAA,MAAA,EAAA,KALA;AAMA,MAAA,KAAA,EAAA,KANA;AAOA,MAAA,MAAA,EAAA,EAPA;AAQA,MAAA,OAAA,EAAA,EARA;AASA,MAAA,SAAA,EAAA;AATA,KAAA;AAAA,GANA;AAiBA,EAAA,QAAA,oBACA,UAAA,CAAA,CAAA,aAAA,EAAA,aAAA,EAAA,YAAA,CAAA,CADA,CAjBA;AAqBA,EAAA,MAAA,EAAA;AACA,IAAA,OAAA,EAAA;AACA,MAAA,KAAA,EAAA,YADA;AAEA,MAAA,SAFA,uBAEA;AACA,eAAA;AACA,UAAA,KAAA,EAAA,KAAA,KAAA,CAAA,IAAA,CAAA;AADA,SAAA;AAGA,OANA;AAOA,MAAA,MAPA,kBAOA,IAPA,EAOA;AACA,eAAA,IAAA,CAAA,qBAAA,CAAA,KAAA,CAAA,GAAA,CAAA,UAAA,CAAA;AAAA,iBAAA;AACA,YAAA,EAAA,EAAA,CAAA,CAAA,EADA;AAEA,YAAA,KAAA,EAAA,CAAA,CAAA,UAFA;AAGA,YAAA,MAAA,EAAA,CAAA,CAAA,gCAAA,CAAA,KAAA,CAAA,GAAA,CAAA,UAAA,CAAA;AAAA,qBAAA;AACA,gBAAA,MAAA,EAAA,CAAA,CAAA,EADA;AAEA,gBAAA,EAAA,EAAA,CAAA,CAAA,OAFA;AAGA,gBAAA,IAAA,EAAA,CAAA,CAAA;AAHA,eAAA;AAAA,aAAA;AAHA,WAAA;AAAA,SAAA,CAAA;AASA,OAjBA;AAkBA,MAAA,IAlBA,kBAkBA;AACA,eAAA,KAAA,SAAA;AACA;AApBA;AADA,GArBA;AA6CA,EAAA,OAAA,kCACA,YAAA,CAAA,CACA,WADA,EAEA,aAFA,CAAA,CADA;AAKA,IAAA,IALA,gBAKA,KALA,EAKA;AACA,WAAA,KAAA,GAAA,IAAA;AACA,WAAA,SAAA,CAAA,KAAA;AACA,KARA;AASA,IAAA,UATA,sBASA,SATA,EASA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,SAAA;AAEA,MAAA,SAAA,GAAA,SAAA,CAAA,GAAA,CAAA,UAAA,CAAA;AAAA,eAAA;AACA,UAAA,EAAA,EAAA,CAAA,CAAA,EADA;AAEA,UAAA,IAAA,EAAA,CAAA,CAAA;AAFA,SAAA;AAAA,OAAA,CAAA;AAKA,WAAA,WAAA,CAAA,SAAA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA;AACA,QAAA,IAAA,EAAA;AADA,OAAA;AAGA,KArBA;AAsBA,IAAA,UAtBA,wBAsBA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,KAAA,CAAA,OAAA,CAAA,OAAA,CAAA,OAAA,CAAA,IAAA,GAAA,KAAA;AADA;AAAA,uBAEA,KAAA,CAAA,OAAA,CAAA,OAAA,CAAA,OAAA,CAAA,OAAA,EAFA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA,KAzBA;AA0BA,IAAA,WA1BA,uBA0BA,SA1BA,EA0BA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,OAAA,CAAA,GAAA,CAAA,iCAAA;AADA;AAAA,uBAEA,MAAA,CAAA,iBAAA,CAAA,SAAA,CAAA,MAAA,CAFA;;AAAA;AAAA;AAAA,uBAGA,MAAA,CAAA,gBAAA,CAAA,SAAA,CAAA,EAAA,CAHA;;AAAA;AAIA,gBAAA,OAAA,CAAA,GAAA,CAAA,6BAAA;;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA,KA/BA;AAgCA,IAAA,iBAhCA,6BAgCA,MAhCA,EAgCA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,qBAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,MAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,kBAAA,EADA,GACA,MAAA,CAAA,CAAA,CAAA,CAAA,MADA;;AAEA,kBAAA,MAAA,CAAA,OAAA,CAAA,MAAA,CAAA;AACA,oBAAA,QAAA,EAAA,mBADA;AAEA,oBAAA,SAAA,EAAA;AACA,sBAAA,EAAA,EAAA;AADA;AAFA,mBAAA;AAMA;;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA,KA3CA;AA4CA,IAAA,gBA5CA,4BA4CA,EA5CA,EA4CA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,MAAA,CAAA,OAAA,CAAA,MAAA,CAAA;AACA,kBAAA,QAAA,EAAA,kBADA;AAEA,kBAAA,SAAA,EAAA;AACA,oBAAA,EAAA,EAAA;AADA,mBAFA;AAKA,kBAAA,MAAA,EAAA,kBAAA;AACA,oBAAA,MAAA,CAAA,UAAA;AACA;AAPA,iBAAA;;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAtDA,IA7CA;AAqGA,EAAA,OAAA,EAAA,mBAAA;AACA,SAAA,UAAA;AACA;AAvGA,CAAA","sourcesContent":["<template>\n<div class=\"saved\">\n<template>\n\n    <v-container fluid>\n        <h2 class=\"subheading grey--text text-center\" v-if=\"configs.length == 0\">Looks like you haven't saved any Trends yet! You can save a selection of topics on the Trends page.</h2>\n        <v-row v-else>\n            <v-list two-line width=100% rounded>\n                <v-list-item>\n                    <HelpSaved />\n                    <span> Need Help?</span>\n\n                </v-list-item>\n                <v-list-item  class=\"item\" v-for=\"config in configs\" :key=\"config.id\" depressed hover @click.stop=\"viewTrends(config.topics)\">\n\n                    <v-col d-flex>\n                        <v-list-item-title class=\"headline\" v-text=\"config.title\" />\n                        <v-card-actions>\n                            <v-row dense>\n                                <!-- We would need ot make sure we limit the number of characters shown -->\n                                <v-col v-for=\"topic in config.topics\" :key=\"topic.id\">\n                                    <v-btn dark rounded width=100% depressed @click.stop=\"open(topic)\" v-text='topic.name' />\n                                </v-col>\n                            </v-row>\n                            <v-spacer />\n                            <v-col class=\"edit\" dense>\n                                    <v-btn outlined text rounded width=100% depressed @click.stop=\"deleteTrend(config)\">\n                                        Delete\n                                    </v-btn>\n                            </v-col>\n                        </v-card-actions>\n                    </v-col>\n                </v-list-item>\n            </v-list>\n        </v-row>\n        <Popup v-model=\"popup\" />\n    </v-container>\n</template>\n</div>\n</template>\n\n<script>\nimport Popup from \"../components/common/Popup\";\nimport HelpSaved from \"../components/common/HelpSaved\";\nimport USER_CONFIGS from \"../graphql/AllOfAUsersConfigurations.gql\"\nimport DELETE_USER_CONFIG from \"../graphql/deleteUserConfiguration.gql\"\nimport DELETE_TOPIC_CONFIG from \"../graphql/deleteTopicConfiguration.gql\"\n\n\nimport {\n    mapMutations,\n    mapGetters\n} from 'vuex';\n\nexport default {\n    name: \"Topics\",\n    components: {\n        Popup,\n        HelpSaved\n    },\n    data: () => ({\n        trend: {\n            title: '',\n            topics: []\n        },\n        dialog: false,\n        popup: false,\n        userId: '',\n        configs: [],\n        skipQuery: false\n    }),\n    computed: {\n        ...mapGetters(['numSelected', 'getSelected', 'getRelated']),\n\n    },\n    apollo: {\n        configs: {\n            query: USER_CONFIGS,\n            variables() {\n                return {\n                    usrId: this.$auth.user.sub\n                }\n            },\n            update(data) {\n                return data.allUserconfigurations.nodes.map(a => ({\n                    id: a.id,\n                    title: a.configName,\n                    topics: a.topicconfigurationsByUsrConfigId.nodes.map(b => ({\n                        nodeId: b.id,\n                        id: b.topicId,\n                        name: b.topicName\n                    }))\n                }))\n            },\n            skip() {\n                return this.skipQuery\n            },\n        }\n    },\n    methods: {\n        ...mapMutations([\n            'openTopic',\n            'setSelected',\n        ]),\n        open(title) {\n            this.popup = true\n            this.openTopic(title)\n        },\n        viewTrends(selection) {\n            console.log(selection)\n\n            selection = selection.map(a => ({\n                    id: a.id,\n                    name: a.name\n                }))\n\n            this.setSelected(selection)\n            this.$router.push({\n                name: 'trends'\n            })\n        },\n        async getConfigs() {\n            this.$apollo.queries.configs.skip = false\n            await this.$apollo.queries.configs.refetch()\n        },\n        async deleteTrend(selection) {\n            console.log(\"Deleting saved congifuration...\")\n            await this.deleteTopicConfig(selection.topics)\n            await this.deleteUserConfig(selection.id)\n            console.log(\"Saved congifuration deleted\")\n        },\n        async deleteTopicConfig(topics) {\n            var i\n            for (i = 0; i < topics.length; i++) {\n                var id = topics[i].nodeId\n                this.$apollo.mutate({\n                    mutation: DELETE_TOPIC_CONFIG,\n                    variables: {\n                        id,\n                    }\n                })\n            }\n        },\n        async deleteUserConfig(id) {\n            this.$apollo.mutate({\n                mutation: DELETE_USER_CONFIG,\n                variables: {\n                    id,\n                },\n                update: () => {\n                    this.getConfigs()\n                },\n            })\n        },\n    },\n    mounted: function() {\n        this.getConfigs()\n    },\n}\n</script>\n\n<style scoped>\ntd {\n    text-align: center !important;\n}\n.saved {\n    padding-top: 20px\n}\n.edit {\n    max-width: 150px;\n}\n.item {\n    background: rgb(230, 235, 255);\n}\n.item:hover {\n    background:rgb(222, 229, 255);\n}\n</style>"],"sourceRoot":"src/views"}]}