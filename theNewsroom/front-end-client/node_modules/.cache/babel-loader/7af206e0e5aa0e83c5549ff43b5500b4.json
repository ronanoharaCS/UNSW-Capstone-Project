{"remainingRequest":"/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/212MonolithFinalSoftwareQuality/theNewsroom/front-end-client/node_modules/babel-loader/lib/index.js!/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/212MonolithFinalSoftwareQuality/theNewsroom/front-end-client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/212MonolithFinalSoftwareQuality/theNewsroom/front-end-client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/212MonolithFinalSoftwareQuality/theNewsroom/front-end-client/src/views/Saved.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/212MonolithFinalSoftwareQuality/theNewsroom/front-end-client/src/views/Saved.vue","mtime":1605530430614},{"path":"/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/212MonolithFinalSoftwareQuality/theNewsroom/front-end-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/212MonolithFinalSoftwareQuality/theNewsroom/front-end-client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/212MonolithFinalSoftwareQuality/theNewsroom/front-end-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/212MonolithFinalSoftwareQuality/theNewsroom/front-end-client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zdWIiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZSI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICIvVXNlcnMvbGlhbWRhbGUvT25lRHJpdmUvVW5pL0NPTVAvMjBUMy9jYXBzdG9uZS1wcm9qZWN0LWNvbXAzOTAwLXcxN2EtMjEyLW1vbm9saXRoLzIxMk1vbm9saXRoRmluYWxTb2Z0d2FyZVF1YWxpdHkvdGhlTmV3c3Jvb20vZnJvbnQtZW5kLWNsaWVudC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCBfb2JqZWN0U3ByZWFkIGZyb20gIi9Vc2Vycy9saWFtZGFsZS9PbmVEcml2ZS9VbmkvQ09NUC8yMFQzL2NhcHN0b25lLXByb2plY3QtY29tcDM5MDAtdzE3YS0yMTItbW9ub2xpdGgvMjEyTW9ub2xpdGhGaW5hbFNvZnR3YXJlUXVhbGl0eS90aGVOZXdzcm9vbS9mcm9udC1lbmQtY2xpZW50L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IFBvcHVwIGZyb20gIi4uL2NvbXBvbmVudHMvY29tbW9uL1BvcHVwIjsKaW1wb3J0IEhlbHBTYXZlZCBmcm9tICIuLi9jb21wb25lbnRzL2NvbW1vbi9IZWxwU2F2ZWQiOwppbXBvcnQgVVNFUl9DT05GSUdTIGZyb20gIi4uL2dyYXBocWwvQWxsT2ZBVXNlcnNDb25maWd1cmF0aW9ucy5ncWwiOwppbXBvcnQgREVMRVRFX1VTRVJfQ09ORklHIGZyb20gIi4uL2dyYXBocWwvZGVsZXRlVXNlckNvbmZpZ3VyYXRpb24uZ3FsIjsKaW1wb3J0IERFTEVURV9UT1BJQ19DT05GSUcgZnJvbSAiLi4vZ3JhcGhxbC9kZWxldGVUb3BpY0NvbmZpZ3VyYXRpb24uZ3FsIjsKaW1wb3J0IHsgbWFwTXV0YXRpb25zLCBtYXBHZXR0ZXJzIH0gZnJvbSAndnVleCc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiVG9waWNzIiwKICBjb21wb25lbnRzOiB7CiAgICBQb3B1cDogUG9wdXAsCiAgICBIZWxwU2F2ZWQ6IEhlbHBTYXZlZAogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHRyZW5kOiB7CiAgICAgICAgdGl0bGU6ICcnLAogICAgICAgIHRvcGljczogW10KICAgICAgfSwKICAgICAgZGlhbG9nOiBmYWxzZSwKICAgICAgcG9wdXA6IGZhbHNlLAogICAgICB1c2VySWQ6ICcnLAogICAgICBjb25maWdzOiBbXSwKICAgICAgc2tpcFF1ZXJ5OiBmYWxzZQogICAgfTsKICB9LAogIGNvbXB1dGVkOiBfb2JqZWN0U3ByZWFkKHt9LCBtYXBHZXR0ZXJzKFsnbnVtU2VsZWN0ZWQnLCAnZ2V0U2VsZWN0ZWQnLCAnZ2V0UmVsYXRlZCddKSksCiAgYXBvbGxvOiB7CiAgICBjb25maWdzOiB7CiAgICAgIHF1ZXJ5OiBVU0VSX0NPTkZJR1MsCiAgICAgIHZhcmlhYmxlczogZnVuY3Rpb24gdmFyaWFibGVzKCkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICB1c3JJZDogdGhpcy4kYXV0aC51c2VyLnN1YgogICAgICAgIH07CiAgICAgIH0sCiAgICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKGRhdGEpIHsKICAgICAgICByZXR1cm4gZGF0YS5hbGxVc2VyY29uZmlndXJhdGlvbnMubm9kZXMubWFwKGZ1bmN0aW9uIChhKSB7CiAgICAgICAgICByZXR1cm4gewogICAgICAgICAgICBpZDogYS5pZCwKICAgICAgICAgICAgdGl0bGU6IGEuY29uZmlnTmFtZSwKICAgICAgICAgICAgdG9waWNzOiBhLnRvcGljY29uZmlndXJhdGlvbnNCeVVzckNvbmZpZ0lkLm5vZGVzLm1hcChmdW5jdGlvbiAoYikgewogICAgICAgICAgICAgIHJldHVybiB7CiAgICAgICAgICAgICAgICBub2RlSWQ6IGIuaWQsCiAgICAgICAgICAgICAgICBpZDogYi50b3BpY0lkLAogICAgICAgICAgICAgICAgbmFtZTogYi50b3BpY05hbWUKICAgICAgICAgICAgICB9OwogICAgICAgICAgICB9KQogICAgICAgICAgfTsKICAgICAgICB9KTsKICAgICAgfSwKICAgICAgc2tpcDogZnVuY3Rpb24gc2tpcCgpIHsKICAgICAgICByZXR1cm4gdGhpcy5za2lwUXVlcnk7CiAgICAgIH0KICAgIH0KICB9LAogIG1ldGhvZHM6IF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgbWFwTXV0YXRpb25zKFsnb3BlblRvcGljJywgJ3NldFNlbGVjdGVkJ10pKSwge30sIHsKICAgIG9wZW46IGZ1bmN0aW9uIG9wZW4odGl0bGUpIHsKICAgICAgdGhpcy5wb3B1cCA9IHRydWU7CiAgICAgIHRoaXMub3BlblRvcGljKHRpdGxlKTsKICAgIH0sCiAgICB2aWV3VHJlbmRzOiBmdW5jdGlvbiB2aWV3VHJlbmRzKHNlbGVjdGlvbikgewogICAgICBjb25zb2xlLmxvZyhzZWxlY3Rpb24pOwogICAgICBzZWxlY3Rpb24gPSBzZWxlY3Rpb24ubWFwKGZ1bmN0aW9uIChhKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIGlkOiBhLmlkLAogICAgICAgICAgbmFtZTogYS5uYW1lCiAgICAgICAgfTsKICAgICAgfSk7CiAgICAgIHRoaXMuc2V0U2VsZWN0ZWQoc2VsZWN0aW9uKTsKICAgICAgdGhpcy4kcm91dGVyLnB1c2goewogICAgICAgIG5hbWU6ICd0cmVuZHMnCiAgICAgIH0pOwogICAgfSwKICAgIGdldENvbmZpZ3M6IGZ1bmN0aW9uIGdldENvbmZpZ3MoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF90aGlzLiRhcG9sbG8ucXVlcmllcy5jb25maWdzLnNraXAgPSBmYWxzZTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzLiRhcG9sbG8ucXVlcmllcy5jb25maWdzLnJlZmV0Y2goKTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGRlbGV0ZVRyZW5kOiBmdW5jdGlvbiBkZWxldGVUcmVuZChzZWxlY3Rpb24pIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY29uc29sZS5sb2coIkRlbGV0aW5nIHNhdmVkIGNvbmdpZnVyYXRpb24uLi4iKTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMzsKICAgICAgICAgICAgICAgIHJldHVybiBfdGhpczIuZGVsZXRlVG9waWNDb25maWcoc2VsZWN0aW9uLnRvcGljcyk7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNTsKICAgICAgICAgICAgICAgIHJldHVybiBfdGhpczIuZGVsZXRlVXNlckNvbmZpZyhzZWxlY3Rpb24uaWQpOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygiU2F2ZWQgY29uZ2lmdXJhdGlvbiBkZWxldGVkIik7CgogICAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMik7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGRlbGV0ZVRvcGljQ29uZmlnOiBmdW5jdGlvbiBkZWxldGVUb3BpY0NvbmZpZyh0b3BpY3MpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMygpIHsKICAgICAgICB2YXIgaSwgaWQ7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGZvciAoaSA9IDA7IGkgPCB0b3BpY3MubGVuZ3RoOyBpKyspIHsKICAgICAgICAgICAgICAgICAgaWQgPSB0b3BpY3NbaV0ubm9kZUlkOwoKICAgICAgICAgICAgICAgICAgX3RoaXMzLiRhcG9sbG8ubXV0YXRlKHsKICAgICAgICAgICAgICAgICAgICBtdXRhdGlvbjogREVMRVRFX1RPUElDX0NPTkZJRywKICAgICAgICAgICAgICAgICAgICB2YXJpYWJsZXM6IHsKICAgICAgICAgICAgICAgICAgICAgIGlkOiBpZAogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIGNhc2UgMToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMyk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGRlbGV0ZVVzZXJDb25maWc6IGZ1bmN0aW9uIGRlbGV0ZVVzZXJDb25maWcoaWQpIHsKICAgICAgdmFyIF90aGlzNCA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNCgpIHsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTQkKF9jb250ZXh0NCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDQucHJldiA9IF9jb250ZXh0NC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX3RoaXM0LiRhcG9sbG8ubXV0YXRlKHsKICAgICAgICAgICAgICAgICAgbXV0YXRpb246IERFTEVURV9VU0VSX0NPTkZJRywKICAgICAgICAgICAgICAgICAgdmFyaWFibGVzOiB7CiAgICAgICAgICAgICAgICAgICAgaWQ6IGlkCiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKCkgewogICAgICAgICAgICAgICAgICAgIF90aGlzNC5nZXRDb25maWdzKCk7CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDE6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTQpOwogICAgICB9KSkoKTsKICAgIH0KICB9KSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy5nZXRDb25maWdzKCk7CiAgfQp9Ow=="},{"version":3,"sources":["Saved.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<div class=\"saved\">\n<template>\n\n    <v-container fluid>\n        <h2 class=\"subheading grey--text text-center\" v-if=\"configs.length == 0\">Looks like you haven't saved any Trends yet! You can save a selection of topics on the Trends page.</h2>\n        <v-row v-else>\n            <v-list two-line width=100% rounded>\n                <v-list-item>\n                    <HelpSaved />\n                    <span> Need Help?</span>\n\n                </v-list-item>\n                <v-list-item  class=\"item\" v-for=\"config in configs\" :key=\"config.id\" depressed hover @click.stop=\"viewTrends(config.topics)\">\n\n                    <v-col d-flex>\n                        <v-list-item-title class=\"headline\" v-text=\"config.title\" />\n                        <v-card-actions>\n                            <v-row dense>\n                                <!-- We would need ot make sure we limit the number of characters shown -->\n                                <v-col v-for=\"topic in config.topics\" :key=\"topic.id\">\n                                    <v-btn dark rounded width=100% depressed @click.stop=\"open(topic)\" v-text='topic.name' />\n                                </v-col>\n                            </v-row>\n                            <v-col class=\"edit\" dense>\n                                    <v-btn outlined text rounded width=100% depressed @click.stop=\"deleteTrend(config)\">\n                                        Delete\n                                    </v-btn>\n                            </v-col>\n                        </v-card-actions>\n                    </v-col>\n                </v-list-item>\n            </v-list>\n        </v-row>\n        <Popup v-model=\"popup\" />\n    </v-container>\n</template>\n</div>\n</template>\n\n<script>\nimport Popup from \"../components/common/Popup\";\nimport HelpSaved from \"../components/common/HelpSaved\";\nimport USER_CONFIGS from \"../graphql/AllOfAUsersConfigurations.gql\"\nimport DELETE_USER_CONFIG from \"../graphql/deleteUserConfiguration.gql\"\nimport DELETE_TOPIC_CONFIG from \"../graphql/deleteTopicConfiguration.gql\"\n\n\nimport {\n    mapMutations,\n    mapGetters\n} from 'vuex';\n\nexport default {\n    name: \"Topics\",\n    components: {\n        Popup,\n        HelpSaved\n    },\n    data: () => ({\n        trend: {\n            title: '',\n            topics: []\n        },\n        dialog: false,\n        popup: false,\n        userId: '',\n        configs: [],\n        skipQuery: false\n    }),\n    computed: {\n        ...mapGetters(['numSelected', 'getSelected', 'getRelated']),\n\n    },\n    apollo: {\n        configs: {\n            query: USER_CONFIGS,\n            variables() {\n                return {\n                    usrId: this.$auth.user.sub\n                }\n            },\n            update(data) {\n                return data.allUserconfigurations.nodes.map(a => ({\n                    id: a.id,\n                    title: a.configName,\n                    topics: a.topicconfigurationsByUsrConfigId.nodes.map(b => ({\n                        nodeId: b.id,\n                        id: b.topicId,\n                        name: b.topicName\n                    }))\n                }))\n            },\n            skip() {\n                return this.skipQuery\n            },\n        }\n    },\n    methods: {\n        ...mapMutations([\n            'openTopic',\n            'setSelected',\n        ]),\n        open(title) {\n            this.popup = true\n            this.openTopic(title)\n        },\n        viewTrends(selection) {\n            console.log(selection)\n\n            selection = selection.map(a => ({\n                    id: a.id,\n                    name: a.name\n                }))\n\n            this.setSelected(selection)\n            this.$router.push({\n                name: 'trends'\n            })\n        },\n        async getConfigs() {\n            this.$apollo.queries.configs.skip = false\n            await this.$apollo.queries.configs.refetch()\n        },\n        async deleteTrend(selection) {\n            console.log(\"Deleting saved congifuration...\")\n            await this.deleteTopicConfig(selection.topics)\n            await this.deleteUserConfig(selection.id)\n            console.log(\"Saved congifuration deleted\")\n        },\n        async deleteTopicConfig(topics) {\n            var i\n            for (i = 0; i < topics.length; i++) {\n                var id = topics[i].nodeId\n                this.$apollo.mutate({\n                    mutation: DELETE_TOPIC_CONFIG,\n                    variables: {\n                        id,\n                    }\n                })\n            }\n        },\n        async deleteUserConfig(id) {\n            this.$apollo.mutate({\n                mutation: DELETE_USER_CONFIG,\n                variables: {\n                    id,\n                },\n                update: () => {\n                    this.getConfigs()\n                },\n            })\n        },\n    },\n    mounted: function() {\n        this.getConfigs()\n    },\n}\n</script>\n\n<style scoped>\ntd {\n    text-align: center !important;\n}\n.saved {\n    padding-top: 20px\n}\n.edit {\n    max-width: 150px;\n}\n.item {\n    background: rgb(230, 235, 255);\n}\n.item:hover {\n    background:rgb(222, 229, 255);\n}\n</style>"],"sourceRoot":"src/views"}]}