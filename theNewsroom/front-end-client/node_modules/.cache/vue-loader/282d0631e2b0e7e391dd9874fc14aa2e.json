{"remainingRequest":"/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/theNewsroom/front-end-client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/theNewsroom/front-end-client/src/views/Topics.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/theNewsroom/front-end-client/src/views/Topics.vue","mtime":1605511148972},{"path":"/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/theNewsroom/front-end-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/theNewsroom/front-end-client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/theNewsroom/front-end-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/theNewsroom/front-end-client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBQb3B1cCBmcm9tICIuLi9jb21wb25lbnRzL2NvbW1vbi9Qb3B1cCIKaW1wb3J0IEhlbHBUb3BpY3MgZnJvbSAiLi4vY29tcG9uZW50cy9jb21tb24vSGVscFRvcGljcyIKaW1wb3J0IFNlYXJjaCBmcm9tICIuLi9jb21wb25lbnRzL2NvbW1vbi9TZWFyY2giCmltcG9ydCBBTExfVE9QSUNTX1dJVEhfRklMVEVSIGZyb20gJy4uL2dyYXBocWwvVG9waWNzQW5kQXJ0aWNsZUNvdW50LmdxbCcKaW1wb3J0IHsKICAgIG1hcE11dGF0aW9ucwp9IGZyb20gJ3Z1ZXgnOwoKZXhwb3J0IGRlZmF1bHQgewogICAgbmFtZTogIlRvcGljcyIsCiAgICBjb21wb25lbnRzOiB7CiAgICAgICAgUG9wdXAsCiAgICAgICAgSGVscFRvcGljcywKICAgICAgICBTZWFyY2gKICAgIH0sCgogICAgZGF0YTogKCkgPT4gKHsKICAgICAgICBzZWFyY2g6IGZhbHNlLAogICAgICAgIHBvcHVwOiBmYWxzZSwKICAgICAgICBzdGFydF9kYXRlOiBudWxsLAogICAgICAgIGVuZF9kYXRlOiBudWxsLAogICAgICAgIGRhdGVzOiBbXSwKICAgICAgICBrZXl3b3JkOiAnJywKICAgICAgICBtZW51OiBmYWxzZSwKICAgICAgICBtZWRpYTogJycsCiAgICAgICAgc29ydERlc2M6IHRydWUsCiAgICAgICAgaGVhZGVyczogW3sKICAgICAgICAgICAgICAgIHRleHQ6ICcjIEFydGljbGVzJywKICAgICAgICAgICAgICAgIHZhbHVlOiAndG9waWNvZmFydGljbGVzQnlUb3BpY0lkLnRvdGFsQ291bnQnLAogICAgICAgICAgICAgICAgd2lkdGg6ICIzMCUiLAogICAgICAgICAgICAgICAgYWxpZ246ICdjZW50ZXInLAogICAgICAgICAgICB9LAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICB0ZXh0OiAnVG9waWMnLAogICAgICAgICAgICAgICAgdmFsdWU6ICduYW1lJywKICAgICAgICAgICAgICAgIHdpZHRoOiAiMTAwJSIsCiAgICAgICAgICAgICAgICBhbGlnbjogJ2NlbnRlcicsCiAgICAgICAgICAgIH0KICAgICAgICBdLAogICAgICAgIHRvcGljczogW10sCgogICAgfSksCiAgICBhcG9sbG86IHsKICAgICAgICB0b3BpY3M6IHsKICAgICAgICAgICAgcXVlcnk6IEFMTF9UT1BJQ1NfV0lUSF9GSUxURVIsCiAgICAgICAgICAgIHZhcmlhYmxlcygpIHsKICAgICAgICAgICAgICAgIHJldHVybiB7CiAgICAgICAgICAgICAgICAgICAgICAgIG1lZGlhOiB0aGlzLm1lZGlhLAogICAgICAgICAgICAgICAgICAgICAgICBmcm9tOiB0aGlzLnN0YXJ0X2RhdGUsCiAgICAgICAgICAgICAgICAgICAgICAgIHRvOiB0aGlzLmVuZF9kYXRlLAogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICB1cGRhdGUoZGF0YSkgewogICAgICAgICAgICAgICAgcmV0dXJuIGRhdGEuYWxsVG9waWNzLm5vZGVzOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfSwKICAgIG1ldGhvZHM6IHsKICAgICAgICAuLi5tYXBNdXRhdGlvbnMoWwogICAgICAgICAgICAnb3BlblRvcGljJywKICAgICAgICAgICAgJ3NlYXJjaFRvcGljS2V5d29yZCcKICAgICAgICBdKSwKICAgICAgICBmb3JtYXREYXRlKGRhdGUpIHsKICAgICAgICAgICAgbGV0IG1vbnRoID0gYCR7ZGF0ZS5nZXRNb250aCgpICsgMX1gOwogICAgICAgICAgICBsZXQgZGF5ID0gYCR7ZGF0ZS5nZXREYXRlKCl9YDsKICAgICAgICAgICAgY29uc3QgeWVhciA9IGRhdGUuZ2V0RnVsbFllYXIoKTsKICAgICAgICAgICAgaWYgKG1vbnRoLmxlbmd0aCA8IDIpIG1vbnRoID0gYDAke21vbnRofWA7CiAgICAgICAgICAgIGlmIChkYXkubGVuZ3RoIDwgMikgZGF5ID0gYDAke2RheX1gOwogICAgICAgICAgICByZXR1cm4gW3llYXIsIG1vbnRoLCBkYXldLmpvaW4oJy0nKTsKICAgICAgICB9LAogICAgICAgIHJvd0NsaWNrZWQodG9waWMpIHsKICAgICAgICAgICAgdGhpcy5vcGVuKHRvcGljKQogICAgICAgICAgICBjb25zb2xlLmxvZyh0b3BpYyk7CiAgICAgICAgfSwKICAgICAgICBvcGVuKHRvcGljKSB7CiAgICAgICAgICAgIHRoaXMucG9wdXAgPSB0cnVlCiAgICAgICAgICAgIHRoaXMub3BlblRvcGljKHRvcGljKQogICAgICAgIH0sCiAgICAgICAgc2F2ZURhdGVzKCkgewogICAgICAgICAgICB0aGlzLiRyZWZzLm1lbnUuc2F2ZSh0aGlzLmRhdGVzKQogICAgICAgICAgICBpZiAodGhpcy5kYXRlc1swXSA8IHRoaXMuZGF0ZXNbMV0pIHsKICAgICAgICAgICAgICAgIHRoaXMuc3RhcnRfZGF0ZSA9IHRoaXMuZGF0ZXNbMF0KICAgICAgICAgICAgICAgIHRoaXMuZW5kX2RhdGUgPSB0aGlzLmRhdGVzWzFdCiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICB0aGlzLnN0YXJ0X2RhdGUgPSB0aGlzLmRhdGVzWzFdCiAgICAgICAgICAgICAgICB0aGlzLmVuZF9kYXRlID0gdGhpcy5kYXRlc1swXQogICAgICAgICAgICB9CiAgICAgICAgICAgIHRoaXMuZGF0ZXMgPSBbdGhpcy5zdGFydF9kYXRlLCB0aGlzLmVuZF9kYXRlXQoKICAgICAgICB9LAogICAgICAgIHNlYXJjaFRvcGljKCkgewogICAgICAgICAgICBpZiAodGhpcy5rZXl3b3JkICE9ICcnKSB7CiAgICAgICAgICAgICAgICB0aGlzLnNlYXJjaCA9IHRydWUKICAgICAgICAgICAgICAgIHRoaXMuc2VhcmNoVG9waWNLZXl3b3JkKHRoaXMua2V5d29yZCkKICAgICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgcmVzZXQoKSB7CiAgICAgICAgICAgIHRoaXMuZW5kX2RhdGUgPSBuZXcgRGF0ZSgpCiAgICAgICAgICAgIHRoaXMuc3RhcnRfZGF0ZSA9IG5ldyBEYXRlKCkKICAgICAgICAgICAgdGhpcy5zdGFydF9kYXRlLnNldE1vbnRoKHRoaXMuZW5kX2RhdGUuZ2V0TW9udGgoKSAtIDEpCgogICAgICAgICAgICB0aGlzLnN0YXJ0X2RhdGUgPSB0aGlzLnN0YXJ0X2RhdGUudG9JU09TdHJpbmcoKS5zbGljZSgwLCAxMCkgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICB0aGlzLmVuZF9kYXRlID0gdGhpcy5lbmRfZGF0ZS50b0lTT1N0cmluZygpLnNsaWNlKDAsIDEwKQogICAgICAgICAgICB0aGlzLmRhdGVzID0gW3RoaXMuc3RhcnRfZGF0ZSwgdGhpcy5lbmRfZGF0ZV0KICAgICAgICAgICAgdGhpcy5tZWRpYSA9ICcnCiAgICAgICAgfQogICAgfSwKICAgICBtb3VudGVkOiBmdW5jdGlvbigpIHsKICAgICAgICB0aGlzLnJlc2V0KCkKICAgICAgICBjb25zb2xlLmxvZygiTW91bnRlZC4iKQogICAgfSwKICAgIGNvbXB1dGVkOiB7CiAgICAgICAgdG9kYXlzRGF0ZSgpIHsKICAgICAgICAgICAgY29uc3QgdG9kYXkgPSBuZXcgRGF0ZSgpOwogICAgICAgICAgICByZXR1cm4gdGhpcy5mb3JtYXREYXRlKHRvZGF5KTsKICAgICAgICB9LAogICAgICAgIGRhdGVSYW5nZSgpIHsKICAgICAgICAgICAgcmV0dXJuIHRoaXMuZGF0ZXMuam9pbignIHRvICcpCiAgICAgICAgfSwKICAgIH0sCn0K"},{"version":3,"sources":["Topics.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsfile":"Topics.vue","sourceRoot":"src/views","sourcesContent":["<template>\n<div class=\"topics\">\n    <template>\n        <v-container fluid>\n\n            <v-layout wrap>\n                <v-flex xs12 md4>\n                    <v-card flat tile width='100%'>\n                        <v-list flat rounded dense>\n                            <v-list-group value=\"true\" color=\"none\">\n                                <template v-slot:activator>\n                                    <v-list-item-content>\n                                        <v-list-item-title class='font-weight-light list-title'>Filters </v-list-item-title>\n                                    </v-list-item-content>\n                                </template>\n                                <!-- Search -->\n                                <v-list-item>\n                                    <v-text-field @keyup.enter.native=\"searchTopic\" dense rounded filled v-model=\"keyword\" append-icon=\"mdi-magnify\" label=\"Search for a topic\" single-line hide-details />\n                                    <Search v-model=\"search\" />\n                                </v-list-item>\n                                <!-- Calendar -->\n                                <v-list-item>\n                                    <v-menu ref=\"menu\" v-model=\"menu\" :close-on-content-click=\"false\" :return-value.sync=\"dates\" transition=\"scale-transition\" offset-y min-width=\"290px\">\n                                        <template v-slot:activator=\"{ on, attrs }\">\n                                            <v-text-field dense rounded filled v-model=\"dateRange\" label=\"Select time period\" append-icon=\"mdi-calendar\" single-line hide-details readonly v-bind=\"attrs\" v-on=\"on\" />\n                                        </template>\n                                        <v-date-picker v-model=\"dates\" :max='todaysDate' range no-title scrollable>\n                                            <v-spacer />\n                                            <v-btn text color=\"primary\" @click=\"saveDates\">\n                                                OK\n                                            </v-btn>\n                                        </v-date-picker>\n                                    </v-menu>\n                                </v-list-item>\n                                <!-- Media selection -->\n                                <v-list-item>\n                                    <v-text-field dense rounded filled v-model=\"media\" append-icon=\"mdi-book-open-variant\" label=\"Filter by media outlet\" single-line hide-details />\n                                </v-list-item>\n                            </v-list-group>\n                            <v-list-item>\n                                <v-spacer />\n                                <v-btn rounded depressed @click=\"reset\">\n                                    Reset </v-btn>\n                                <HelpTopics />\n                            </v-list-item>\n                        </v-list>\n                    </v-card>\n                    <v-spacer />\n                </v-flex>\n                <v-spacer />\n                <v-flex align-center xs12 md8>\n                    <!-- At the moment, topics are shown in a data table with rows that contain a topic's name and number of articles. Datatables allow us with a lot of options for sorting and presenting data, and are more scalable for different screen resolutions than other data presentation methods -->\n                    <v-data-table :mobile-breakpoint=\"0\" :headers=\"headers\" :items=\"topics\" :sort-by=\"['topicofarticlesByTopicId.totalCount']\" :sort-desc=\"[true]\">\n                        <template v-slot:item=\"{ item }\">\n                            <tr @click=\"rowClicked(item)\">\n                                <td> {{item.topicofarticlesByTopicId.totalCount}} </td>\n                                <td>{{item.name}}</td>\n                            </tr>\n                        </template>\n                    </v-data-table>\n                </v-flex>\n                <Popup v-model=\"popup\" />\n                <v-col />\n            </v-layout>\n        </v-container>\n    </template>\n</div>\n</template>\n\n<script>\nimport Popup from \"../components/common/Popup\"\nimport HelpTopics from \"../components/common/HelpTopics\"\nimport Search from \"../components/common/Search\"\nimport ALL_TOPICS_WITH_FILTER from '../graphql/TopicsAndArticleCount.gql'\nimport {\n    mapMutations\n} from 'vuex';\n\nexport default {\n    name: \"Topics\",\n    components: {\n        Popup,\n        HelpTopics,\n        Search\n    },\n\n    data: () => ({\n        search: false,\n        popup: false,\n        start_date: null,\n        end_date: null,\n        dates: [],\n        keyword: '',\n        menu: false,\n        media: '',\n        sortDesc: true,\n        headers: [{\n                text: '# Articles',\n                value: 'topicofarticlesByTopicId.totalCount',\n                width: \"30%\",\n                align: 'center',\n            },\n            {\n                text: 'Topic',\n                value: 'name',\n                width: \"100%\",\n                align: 'center',\n            }\n        ],\n        topics: [],\n\n    }),\n    apollo: {\n        topics: {\n            query: ALL_TOPICS_WITH_FILTER,\n            variables() {\n                return {\n                        media: this.media,\n                        from: this.start_date,\n                        to: this.end_date,\n                }\n            },\n            update(data) {\n                return data.allTopics.nodes;\n            }\n        }\n    },\n    methods: {\n        ...mapMutations([\n            'openTopic',\n            'searchTopicKeyword'\n        ]),\n        formatDate(date) {\n            let month = `${date.getMonth() + 1}`;\n            let day = `${date.getDate()}`;\n            const year = date.getFullYear();\n            if (month.length < 2) month = `0${month}`;\n            if (day.length < 2) day = `0${day}`;\n            return [year, month, day].join('-');\n        },\n        rowClicked(topic) {\n            this.open(topic)\n            console.log(topic);\n        },\n        open(topic) {\n            this.popup = true\n            this.openTopic(topic)\n        },\n        saveDates() {\n            this.$refs.menu.save(this.dates)\n            if (this.dates[0] < this.dates[1]) {\n                this.start_date = this.dates[0]\n                this.end_date = this.dates[1]\n            } else {\n                this.start_date = this.dates[1]\n                this.end_date = this.dates[0]\n            }\n            this.dates = [this.start_date, this.end_date]\n\n        },\n        searchTopic() {\n            if (this.keyword != '') {\n                this.search = true\n                this.searchTopicKeyword(this.keyword)\n            }\n        },\n        reset() {\n            this.end_date = new Date()\n            this.start_date = new Date()\n            this.start_date.setMonth(this.end_date.getMonth() - 1)\n\n            this.start_date = this.start_date.toISOString().slice(0, 10)                    \n            this.end_date = this.end_date.toISOString().slice(0, 10)\n            this.dates = [this.start_date, this.end_date]\n            this.media = ''\n        }\n    },\n     mounted: function() {\n        this.reset()\n        console.log(\"Mounted.\")\n    },\n    computed: {\n        todaysDate() {\n            const today = new Date();\n            return this.formatDate(today);\n        },\n        dateRange() {\n            return this.dates.join(' to ')\n        },\n    },\n}\n</script>\n\n<style scoped>\ntd {\n    text-align: center !important;\n}\n\n.list-title {\n    font-size: 16px !important;\n}\n\n.item {\n    margin: 5px;\n    border-radius: 4px;\n}\n\n.item:hover {\n    background: ghostwhite;\n}\n</style>\n"]}]}