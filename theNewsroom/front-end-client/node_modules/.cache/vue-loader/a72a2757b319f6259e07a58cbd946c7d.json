{"remainingRequest":"/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/theNewsroom/front-end-client/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/theNewsroom/front-end-client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/theNewsroom/front-end-client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/theNewsroom/front-end-client/src/components/common/HelpTopics.vue?vue&type=template&id=49e06629&","dependencies":[{"path":"/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/theNewsroom/front-end-client/src/components/common/HelpTopics.vue","mtime":1605414425071},{"path":"/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/theNewsroom/front-end-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/theNewsroom/front-end-client/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/theNewsroom/front-end-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/theNewsroom/front-end-client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKAogICAgImRpdiIsCiAgICBbCiAgICAgIF9jKAogICAgICAgICJ2LWRpYWxvZyIsCiAgICAgICAgewogICAgICAgICAgYXR0cnM6IHsgImQtZmxleCI6ICIiLCBlbGV2YXRpb246ICIwIiwgd2lkdGg6ICI1MDAiIH0sCiAgICAgICAgICBzY29wZWRTbG90czogX3ZtLl91KFsKICAgICAgICAgICAgewogICAgICAgICAgICAgIGtleTogImFjdGl2YXRvciIsCiAgICAgICAgICAgICAgZm46IGZ1bmN0aW9uKHJlZikgewogICAgICAgICAgICAgICAgdmFyIG9uID0gcmVmLm9uCiAgICAgICAgICAgICAgICB2YXIgYXR0cnMgPSByZWYuYXR0cnMKICAgICAgICAgICAgICAgIHJldHVybiBbCiAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICJ2LWJ0biIsCiAgICAgICAgICAgICAgICAgICAgX3ZtLl9nKAogICAgICAgICAgICAgICAgICAgICAgX3ZtLl9iKHsgYXR0cnM6IHsgaWNvbjogIiIgfSB9LCAidi1idG4iLCBhdHRycywgZmFsc2UpLAogICAgICAgICAgICAgICAgICAgICAgb24KICAgICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgICAgIFtfYygidi1pY29uIiwgW192bS5fdigibWRpLWhlbHAtY2lyY2xlLW91dGxpbmUiKV0pXSwKICAgICAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIF0pLAogICAgICAgICAgbW9kZWw6IHsKICAgICAgICAgICAgdmFsdWU6IF92bS5zaG93LAogICAgICAgICAgICBjYWxsYmFjazogZnVuY3Rpb24oJCR2KSB7CiAgICAgICAgICAgICAgX3ZtLnNob3cgPSAkJHYKICAgICAgICAgICAgfSwKICAgICAgICAgICAgZXhwcmVzc2lvbjogInNob3ciCiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBbCiAgICAgICAgICBfYygKICAgICAgICAgICAgInYtY2FyZCIsCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICBfYygidi1jYXJkLXRpdGxlIiwgeyBzdGF0aWNDbGFzczogImhlYWRsaW5lIiB9LCBbCiAgICAgICAgICAgICAgICBfdm0uX3YoIiBOZWVkIEhlbHA/ICIpCiAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAidi1jYXJkLXRleHQiLAogICAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogImZsZXgtd3JhcCB0ZXh0LWp1c3RpZnkganVzdGlmeS1zcGFjZS1iZXR3ZWVuIiB9LAogICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICBfYygicCIsIFsKICAgICAgICAgICAgICAgICAgICBfdm0uX3YoIlRoZSAiKSwKICAgICAgICAgICAgICAgICAgICBfYygiYiIsIFtfdm0uX3YoIk5hdmlnYXRpb24gQmFyIildKSwKICAgICAgICAgICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgICAgICAgICAiIGF0IHRoZSB0b3Agb2YgdGhlIHBhZ2UgY2FuIGJlIHVzZWQgdG8gYWNjZXNzIGFueSBwYXJ0IG9mIHRoZSB3ZWJzaXRlLiIKICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgICBfYygicCIsIFsKICAgICAgICAgICAgICAgICAgICBfYygiYiIsIFtfdm0uX3YoIkZpbHRlcnMiKV0pLAogICAgICAgICAgICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgICAgICAgICAgICIgaXMgYSBkcm9wIGRvd24gbWVudSB0aGF0IHdpbGwgYWxsb3cgeW91IHRvIGFkanVzdCB0aGUgc2hvd24gdG9waWNzLiIKICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgICBfYygicCIsIFsKICAgICAgICAgICAgICAgICAgICBfYygiYiIsIFtfdm0uX3YoIlNlYXJjaCIpXSksCiAgICAgICAgICAgICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAgICAgICAgICAgIiB3aWxsIGFsbG93IHlvdSB0byBzZWFyY2ggZm9yIGEgc3BlY2lmaWMgdG9waWMsIHJlZ2FyZGxlc3Mgb2Ygd2hldGhlciBpdCBhcHBlYXJzIGluIHRoZSB0YWJsZS4iCiAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgICAgX2MoInAiLCBbCiAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCJBZGp1c3RpbmcgdGhlICIpLAogICAgICAgICAgICAgICAgICAgIF9jKCJiIiwgW192bS5fdigiVGltZSBQZXJpb2QiKV0pLAogICAgICAgICAgICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgICAgICAgICAgICIgd2lsbCBhbGxvdyB5b3UgYWRqdXN0IHRoZSB0aW1lZnJhbWUgZm9yIHRoZSB0b3BpY3Mgb24gdGhlIHBhZ2UuIgogICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICAgIF9jKCJwIiwgWwogICAgICAgICAgICAgICAgICAgIF92bS5fdigiVGhlICIpLAogICAgICAgICAgICAgICAgICAgIF9jKCJiIiwgW192bS5fdigiTWVkaWEgT3V0bGV0IildKSwKICAgICAgICAgICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgICAgICAgICAiIHNlYXJjaCBiYXIgY2FuIGJlIHVzZWQgdG8gZmlsdGVyIGJ5IGFydGljbGVzIGluY2x1ZGVkIGluIHlvdXIgdG9waWMgYW5hbHlzaXMgYnkgdGhlIHB1Ymxpc2hpbmcgbWVkaWEgb3V0bGV0LiIKICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgICBfYygicCIsIFsKICAgICAgICAgICAgICAgICAgICBfYygiYiIsIFtfdm0uX3YoIlRoZSBUb3BpY3MgVGFibGUiKV0pLAogICAgICAgICAgICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgICAgICAgICAgICIgZGlzcGxheXMgdGhlIHRvcGljcyBtYXRjaGluZyB5b3VyIGZpbHRlcnM7IG9yIGJ5IGRlZmF1bHQgdGhlIG1vc3QgcG9wdWxhciB0b3BpY3MuIFlvdSBjYW4gdXNlIHRoZSBzb3J0IGJ1dHRvbnMgYXQgdGhlIHRvcCBvZiBlYWNoIGNvbHVtbiB0byBjaGFuZ2UgdGhlIG9yZGVyIG9mIHRoZSByb3dzIGFjY29yZGluZyB0byBudW1iZXIgb2YgYXJ0aWNsZXMgYW5kIHRvcGljIHRpdGxlLiBZb3UgY2FuIGFsc28gc2V0IHRoZSBudW1iZXIgb2Ygcm93cyB5b3Ugd2FudCBkaXNwbGF5ZWQgYXQgb25jZSwgdXNpbmcgdGhlIGZpbHRlciBiZWxvdyB0aGUgdGFibGUsIGFuZCB2aWV3IHRoZSBuZXh0IG9yIHByZXZpb3VzIHNldCBvZiByb3dzIHdpdGggdGhlIGFycm93cyBhdCB0aGUgYm90dG9tLiIKICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICJ2LWNhcmQtYWN0aW9ucyIsCiAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICJ2LWJ0biIsCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgd2lkdGg6ICIxMDAlIiwgcm91bmRlZDogIiIsIGRlcHJlc3NlZDogIiIgfSwKICAgICAgICAgICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAkZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCkKICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLmNsb3NlKCRldmVudCkKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgW192bS5fdigiIENsb3NlICIpXQogICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICkKICAgICAgICAgICAgXSwKICAgICAgICAgICAgMQogICAgICAgICAgKQogICAgICAgIF0sCiAgICAgICAgMQogICAgICApCiAgICBdLAogICAgMQogICkKfQp2YXIgc3RhdGljUmVuZGVyRm5zID0gW10KcmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlCgpleHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9"}]}