{"remainingRequest":"/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/theNewsroom/front-end-client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/theNewsroom/front-end-client/src/views/Topics.vue?vue&type=template&id=26c88c44&scoped=true&","dependencies":[{"path":"/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/theNewsroom/front-end-client/src/views/Topics.vue","mtime":1605511148972},{"path":"/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/theNewsroom/front-end-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/theNewsroom/front-end-client/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/theNewsroom/front-end-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/theNewsroom/front-end-client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxkaXYgY2xhc3M9InRvcGljcyI+CiAgICA8dGVtcGxhdGU+CiAgICAgICAgPHYtY29udGFpbmVyIGZsdWlkPgoKICAgICAgICAgICAgPHYtbGF5b3V0IHdyYXA+CiAgICAgICAgICAgICAgICA8di1mbGV4IHhzMTIgbWQ0PgogICAgICAgICAgICAgICAgICAgIDx2LWNhcmQgZmxhdCB0aWxlIHdpZHRoPScxMDAlJz4KICAgICAgICAgICAgICAgICAgICAgICAgPHYtbGlzdCBmbGF0IHJvdW5kZWQgZGVuc2U+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1saXN0LWdyb3VwIHZhbHVlPSJ0cnVlIiBjb2xvcj0ibm9uZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRlbXBsYXRlIHYtc2xvdDphY3RpdmF0b3I+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWxpc3QtaXRlbS1jb250ZW50PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtbGlzdC1pdGVtLXRpdGxlIGNsYXNzPSdmb250LXdlaWdodC1saWdodCBsaXN0LXRpdGxlJz5GaWx0ZXJzIDwvdi1saXN0LWl0ZW0tdGl0bGU+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdi1saXN0LWl0ZW0tY29udGVudD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RlbXBsYXRlPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0gU2VhcmNoIC0tPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWxpc3QtaXRlbT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtdGV4dC1maWVsZCBAa2V5dXAuZW50ZXIubmF0aXZlPSJzZWFyY2hUb3BpYyIgZGVuc2Ugcm91bmRlZCBmaWxsZWQgdi1tb2RlbD0ia2V5d29yZCIgYXBwZW5kLWljb249Im1kaS1tYWduaWZ5IiBsYWJlbD0iU2VhcmNoIGZvciBhIHRvcGljIiBzaW5nbGUtbGluZSBoaWRlLWRldGFpbHMgLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPFNlYXJjaCB2LW1vZGVsPSJzZWFyY2giIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC92LWxpc3QtaXRlbT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tIENhbGVuZGFyIC0tPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWxpc3QtaXRlbT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtbWVudSByZWY9Im1lbnUiIHYtbW9kZWw9Im1lbnUiIDpjbG9zZS1vbi1jb250ZW50LWNsaWNrPSJmYWxzZSIgOnJldHVybi12YWx1ZS5zeW5jPSJkYXRlcyIgdHJhbnNpdGlvbj0ic2NhbGUtdHJhbnNpdGlvbiIgb2Zmc2V0LXkgbWluLXdpZHRoPSIyOTBweCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGVtcGxhdGUgdi1zbG90OmFjdGl2YXRvcj0ieyBvbiwgYXR0cnMgfSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtdGV4dC1maWVsZCBkZW5zZSByb3VuZGVkIGZpbGxlZCB2LW1vZGVsPSJkYXRlUmFuZ2UiIGxhYmVsPSJTZWxlY3QgdGltZSBwZXJpb2QiIGFwcGVuZC1pY29uPSJtZGktY2FsZW5kYXIiIHNpbmdsZS1saW5lIGhpZGUtZGV0YWlscyByZWFkb25seSB2LWJpbmQ9ImF0dHJzIiB2LW9uPSJvbiIgLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGVtcGxhdGU+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1kYXRlLXBpY2tlciB2LW1vZGVsPSJkYXRlcyIgOm1heD0ndG9kYXlzRGF0ZScgcmFuZ2Ugbm8tdGl0bGUgc2Nyb2xsYWJsZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1zcGFjZXIgLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1idG4gdGV4dCBjb2xvcj0icHJpbWFyeSIgQGNsaWNrPSJzYXZlRGF0ZXMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBPSwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdi1idG4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3YtZGF0ZS1waWNrZXI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdi1tZW51PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdi1saXN0LWl0ZW0+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSBNZWRpYSBzZWxlY3Rpb24gLS0+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtbGlzdC1pdGVtPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di10ZXh0LWZpZWxkIGRlbnNlIHJvdW5kZWQgZmlsbGVkIHYtbW9kZWw9Im1lZGlhIiBhcHBlbmQtaWNvbj0ibWRpLWJvb2stb3Blbi12YXJpYW50IiBsYWJlbD0iRmlsdGVyIGJ5IG1lZGlhIG91dGxldCIgc2luZ2xlLWxpbmUgaGlkZS1kZXRhaWxzIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC92LWxpc3QtaXRlbT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdi1saXN0LWdyb3VwPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtbGlzdC1pdGVtPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LXNwYWNlciAvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWJ0biByb3VuZGVkIGRlcHJlc3NlZCBAY2xpY2s9InJlc2V0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVzZXQgPC92LWJ0bj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8SGVscFRvcGljcyAvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC92LWxpc3QtaXRlbT4KICAgICAgICAgICAgICAgICAgICAgICAgPC92LWxpc3Q+CiAgICAgICAgICAgICAgICAgICAgPC92LWNhcmQ+CiAgICAgICAgICAgICAgICAgICAgPHYtc3BhY2VyIC8+CiAgICAgICAgICAgICAgICA8L3YtZmxleD4KICAgICAgICAgICAgICAgIDx2LXNwYWNlciAvPgogICAgICAgICAgICAgICAgPHYtZmxleCBhbGlnbi1jZW50ZXIgeHMxMiBtZDg+CiAgICAgICAgICAgICAgICAgICAgPCEtLSBBdCB0aGUgbW9tZW50LCB0b3BpY3MgYXJlIHNob3duIGluIGEgZGF0YSB0YWJsZSB3aXRoIHJvd3MgdGhhdCBjb250YWluIGEgdG9waWMncyBuYW1lIGFuZCBudW1iZXIgb2YgYXJ0aWNsZXMuIERhdGF0YWJsZXMgYWxsb3cgdXMgd2l0aCBhIGxvdCBvZiBvcHRpb25zIGZvciBzb3J0aW5nIGFuZCBwcmVzZW50aW5nIGRhdGEsIGFuZCBhcmUgbW9yZSBzY2FsYWJsZSBmb3IgZGlmZmVyZW50IHNjcmVlbiByZXNvbHV0aW9ucyB0aGFuIG90aGVyIGRhdGEgcHJlc2VudGF0aW9uIG1ldGhvZHMgLS0+CiAgICAgICAgICAgICAgICAgICAgPHYtZGF0YS10YWJsZSA6bW9iaWxlLWJyZWFrcG9pbnQ9IjAiIDpoZWFkZXJzPSJoZWFkZXJzIiA6aXRlbXM9InRvcGljcyIgOnNvcnQtYnk9IlsndG9waWNvZmFydGljbGVzQnlUb3BpY0lkLnRvdGFsQ291bnQnXSIgOnNvcnQtZGVzYz0iW3RydWVdIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHRlbXBsYXRlIHYtc2xvdDppdGVtPSJ7IGl0ZW0gfSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHIgQGNsaWNrPSJyb3dDbGlja2VkKGl0ZW0pIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+IHt7aXRlbS50b3BpY29mYXJ0aWNsZXNCeVRvcGljSWQudG90YWxDb3VudH19IDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnt7aXRlbS5uYW1lfX08L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICAgICAgPC90ZW1wbGF0ZT4KICAgICAgICAgICAgICAgICAgICA8L3YtZGF0YS10YWJsZT4KICAgICAgICAgICAgICAgIDwvdi1mbGV4PgogICAgICAgICAgICAgICAgPFBvcHVwIHYtbW9kZWw9InBvcHVwIiAvPgogICAgICAgICAgICAgICAgPHYtY29sIC8+CiAgICAgICAgICAgIDwvdi1sYXlvdXQ+CiAgICAgICAgPC92LWNvbnRhaW5lcj4KICAgIDwvdGVtcGxhdGU+CjwvZGl2Pgo="},null]}