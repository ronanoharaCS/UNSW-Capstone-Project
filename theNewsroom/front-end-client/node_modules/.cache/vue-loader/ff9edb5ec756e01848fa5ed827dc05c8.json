{"remainingRequest":"/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/theNewsroom/front-end-client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/theNewsroom/front-end-client/src/components/common/SaveTrend.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/theNewsroom/front-end-client/src/components/common/SaveTrend.vue","mtime":1605511148968},{"path":"/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/theNewsroom/front-end-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/theNewsroom/front-end-client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/theNewsroom/front-end-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/theNewsroom/front-end-client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7CiAgICBtYXBHZXR0ZXJzLAogICAgbWFwTXV0YXRpb25zCn0gZnJvbSAndnVleCc7CgppbXBvcnQgQ1JFQVRFX1VTRVJfQ09ORklHIGZyb20gJy4uLy4uL2dyYXBocWwvY3JlYXRlVXNlckNvbmZpZ3VyYXRpb24uZ3FsJwppbXBvcnQgQ1JFQVRFX1RPUElDX0NPTkZJRyBmcm9tICcuLi8uLi9ncmFwaHFsL2NyZWF0ZVRvcGljQ29uZmlndXJhdGlvbi5ncWwnCgpleHBvcnQgZGVmYXVsdCB7CiAgICBwcm9wczogewogICAgICAgIHZhbHVlOiBCb29sZWFuCiAgICB9LAogICAgZGF0YTogKCkgPT4gKHsKICAgICAgICB0aXRsZTogbnVsbCwKICAgICAgICBzYXZlOiBmYWxzZSwKICAgICAgICBjb25maWdfaWQ6IG51bGwKICAgIH0pLAogICAgY29tcHV0ZWQ6IHsKICAgICAgICAuLi5tYXBHZXR0ZXJzKFsnZ2V0U2VsZWN0ZWQnXSksCiAgICAgICAgc2hvdzogewogICAgICAgICAgICBnZXQoKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy52YWx1ZQogICAgICAgICAgICB9LAogICAgICAgICAgICBzZXQodmFsdWUpIHsKICAgICAgICAgICAgICAgIHRoaXMuJGVtaXQoJ2lucHV0JywgdmFsdWUpCiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9LAogICAgbWV0aG9kczogewogICAgICAgIC4uLm1hcE11dGF0aW9ucyhbCiAgICAgICAgICAgICdzYXZlVHJlbmQnCiAgICAgICAgXSksCiAgICAgICAgY2xvc2UoKSB7CiAgICAgICAgICAgIHRoaXMuc2F2ZSA9IGZhbHNlCiAgICAgICAgICAgIHRoaXMuJGVtaXQoJ3NhdmVkJyk7CiAgICAgICAgfSwKICAgICAgICBhc3luYyBzYXZlVHJlbmRTZWxlY3Rpb24oY29uZmlnTmFtZSkgewogICAgICAgICAgICBpZiAoY29uZmlnTmFtZS5sZW5ndGggPiAzICYmIGNvbmZpZ05hbWUubGVuZ3RoIDw9IDIwICYmIHRoaXMuZ2V0U2VsZWN0ZWQubGVuZ3RoID4gMCkgewogICAgICAgICAgICAgICAgY29uZmlnTmFtZSA9IGNvbmZpZ05hbWUuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkgKyBjb25maWdOYW1lLnNsaWNlKDEpCiAgICAgICAgICAgICAgICBhd2FpdCB0aGlzLmNyZWF0ZVVzZXJDb25maWcoY29uZmlnTmFtZSkKICAgICAgICAgICAgICAgIHRoaXMuY2xvc2UoKQogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBhc3luYyBjcmVhdGVVc2VyQ29uZmlnKGNvbmZpZ05hbWUpIHsKICAgICAgICAgICAgdmFyIHVzcklkID0gdGhpcy4kYXV0aC51c2VyLnN1YgogICAgICAgICAgICBhd2FpdCB0aGlzLiRhcG9sbG8ubXV0YXRlKHsKICAgICAgICAgICAgICAgIG11dGF0aW9uOiBDUkVBVEVfVVNFUl9DT05GSUcsCiAgICAgICAgICAgICAgICB2YXJpYWJsZXM6IHsKICAgICAgICAgICAgICAgICAgICBjb25maWdOYW1lLAogICAgICAgICAgICAgICAgICAgIHVzcklkCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgdXBkYXRlOiAoc3RvcmUsIHsgZGF0YTogeyBjcmVhdGVVc2VyY29uZmlndXJhdGlvbiB9IH0pID0+IHsKICAgICAgICAgICAgICAgICAgICB0aGlzLmNyZWF0ZVRvcGljQ29uZmlnKGNyZWF0ZVVzZXJjb25maWd1cmF0aW9uLnVzZXJjb25maWd1cmF0aW9uLmlkKQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgfSkKICAgICAgICB9LAogICAgICAgIGFzeW5jIGNyZWF0ZVRvcGljQ29uZmlnKHVzckNvbmZpZ0lkKSB7CiAgICAgICAgICAgIHZhciBpCiAgICAgICAgICAgIGZvciAoaSA9IDA7IGkgPCB0aGlzLmdldFNlbGVjdGVkLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICAgICAgICB2YXIgdG9waWNJZCA9IHRoaXMuZ2V0U2VsZWN0ZWRbaV0uaWQKICAgICAgICAgICAgICAgIHZhciB0b3BpY05hbWUgPSB0aGlzLmdldFNlbGVjdGVkW2ldLm5hbWUKICAgICAgICAgICAgICAgIGF3YWl0IHRoaXMuJGFwb2xsby5tdXRhdGUoewogICAgICAgICAgICAgICAgbXV0YXRpb246IENSRUFURV9UT1BJQ19DT05GSUcsCiAgICAgICAgICAgICAgICAgICAgdmFyaWFibGVzOiB7CiAgICAgICAgICAgICAgICAgICAgICAgIHVzckNvbmZpZ0lkLAogICAgICAgICAgICAgICAgICAgICAgICB0b3BpY0lkLAogICAgICAgICAgICAgICAgICAgICAgICB0b3BpY05hbWUKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICB9CiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdlbmQgY3JlYXRlIHRvcGljJykKICAgICAgICB9CiAgICB9LAp9Cg=="},{"version":3,"sources":["SaveTrend.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SaveTrend.vue","sourceRoot":"src/components/common","sourcesContent":["<template>\n<v-dialog v-model=\"save\" max-width=\"600px\" max-height=\"100px\">\n    <template v-slot:activator=\"{ on, attrs }\">\n        <v-btn depressed rounded v-bind=\"attrs\" v-on=\"on\">\n            Save\n        </v-btn>\n    </template>\n    <v-card class=\"flex-wrap text-justify justify-space-between\">\n        <v-card-title>\n            <span class=\"headline\">Save Trend Selection</span>\n        </v-card-title>\n        <v-card-text>\n            <v-text-field v-model='title' :rules=\"[\n                () => !!title || 'This field is required',\n                () => !!title && this.getSelected.length > 0 || 'Please select a topic first', \n                () => !!title && title.length > 3 || 'Name must have more than 3 characters',\n                () => !!title && title.length <= 25 || 'Name must be less than 20 characters', \n                ]\" placeholder=\"Enter a name for your selection\" counter=\"20\" />\n        </v-card-text>\n        <v-card-actions>\n            <v-spacer />\n            <v-btn depressed rounded @click.stop=\"close\">\n                Close\n            </v-btn>\n            <v-btn depressed rounded @click=\"saveTrendSelection(title)\">\n                Save\n            </v-btn>\n        </v-card-actions>\n    </v-card>\n</v-dialog>\n</template>\n\n<script>\nimport {\n    mapGetters,\n    mapMutations\n} from 'vuex';\n\nimport CREATE_USER_CONFIG from '../../graphql/createUserConfiguration.gql'\nimport CREATE_TOPIC_CONFIG from '../../graphql/createTopicConfiguration.gql'\n\nexport default {\n    props: {\n        value: Boolean\n    },\n    data: () => ({\n        title: null,\n        save: false,\n        config_id: null\n    }),\n    computed: {\n        ...mapGetters(['getSelected']),\n        show: {\n            get() {\n                return this.value\n            },\n            set(value) {\n                this.$emit('input', value)\n            }\n        }\n    },\n    methods: {\n        ...mapMutations([\n            'saveTrend'\n        ]),\n        close() {\n            this.save = false\n            this.$emit('saved');\n        },\n        async saveTrendSelection(configName) {\n            if (configName.length > 3 && configName.length <= 20 && this.getSelected.length > 0) {\n                configName = configName.charAt(0).toUpperCase() + configName.slice(1)\n                await this.createUserConfig(configName)\n                this.close()\n            }\n        },\n        async createUserConfig(configName) {\n            var usrId = this.$auth.user.sub\n            await this.$apollo.mutate({\n                mutation: CREATE_USER_CONFIG,\n                variables: {\n                    configName,\n                    usrId\n                },\n                update: (store, { data: { createUserconfiguration } }) => {\n                    this.createTopicConfig(createUserconfiguration.userconfiguration.id)\n                },\n            })\n        },\n        async createTopicConfig(usrConfigId) {\n            var i\n            for (i = 0; i < this.getSelected.length; i++) {\n                var topicId = this.getSelected[i].id\n                var topicName = this.getSelected[i].name\n                await this.$apollo.mutate({\n                mutation: CREATE_TOPIC_CONFIG,\n                    variables: {\n                        usrConfigId,\n                        topicId,\n                        topicName\n                    }\n                })\n            }\n            console.log('end create topic')\n        }\n    },\n}\n</script>\n"]}]}