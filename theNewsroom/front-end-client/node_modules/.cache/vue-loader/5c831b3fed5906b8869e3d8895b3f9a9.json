{"remainingRequest":"/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/212MonolithFinalSoftwareQuality/theNewsroom/front-end-client/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/212MonolithFinalSoftwareQuality/theNewsroom/front-end-client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/212MonolithFinalSoftwareQuality/theNewsroom/front-end-client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/212MonolithFinalSoftwareQuality/theNewsroom/front-end-client/src/components/common/HelpTrends.vue?vue&type=template&id=cb96730a&","dependencies":[{"path":"/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/212MonolithFinalSoftwareQuality/theNewsroom/front-end-client/src/components/common/HelpTrends.vue","mtime":1605530430594},{"path":"/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/212MonolithFinalSoftwareQuality/theNewsroom/front-end-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/212MonolithFinalSoftwareQuality/theNewsroom/front-end-client/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/212MonolithFinalSoftwareQuality/theNewsroom/front-end-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/212MonolithFinalSoftwareQuality/theNewsroom/front-end-client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKAogICAgImRpdiIsCiAgICB7IHN0YXRpY0NsYXNzOiAidGV4dC1jZW50ZXIiIH0sCiAgICBbCiAgICAgIF9jKAogICAgICAgICJ2LWRpYWxvZyIsCiAgICAgICAgewogICAgICAgICAgYXR0cnM6IHsgd2lkdGg6ICI1MDAiIH0sCiAgICAgICAgICBzY29wZWRTbG90czogX3ZtLl91KFsKICAgICAgICAgICAgewogICAgICAgICAgICAgIGtleTogImFjdGl2YXRvciIsCiAgICAgICAgICAgICAgZm46IGZ1bmN0aW9uKHJlZikgewogICAgICAgICAgICAgICAgdmFyIG9uID0gcmVmLm9uCiAgICAgICAgICAgICAgICB2YXIgYXR0cnMgPSByZWYuYXR0cnMKICAgICAgICAgICAgICAgIHJldHVybiBbCiAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICJ2LWJ0biIsCiAgICAgICAgICAgICAgICAgICAgX3ZtLl9nKAogICAgICAgICAgICAgICAgICAgICAgX3ZtLl9iKHsgYXR0cnM6IHsgaWNvbjogIiIgfSB9LCAidi1idG4iLCBhdHRycywgZmFsc2UpLAogICAgICAgICAgICAgICAgICAgICAgb24KICAgICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgICAgIFtfYygidi1pY29uIiwgW192bS5fdigibWRpLWhlbHAtY2lyY2xlLW91dGxpbmUiKV0pXSwKICAgICAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIF0pLAogICAgICAgICAgbW9kZWw6IHsKICAgICAgICAgICAgdmFsdWU6IF92bS5zaG93LAogICAgICAgICAgICBjYWxsYmFjazogZnVuY3Rpb24oJCR2KSB7CiAgICAgICAgICAgICAgX3ZtLnNob3cgPSAkJHYKICAgICAgICAgICAgfSwKICAgICAgICAgICAgZXhwcmVzc2lvbjogInNob3ciCiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBbCiAgICAgICAgICBfYygKICAgICAgICAgICAgInYtY2FyZCIsCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICBfYygidi1jYXJkLXRpdGxlIiwgeyBzdGF0aWNDbGFzczogImhlYWRsaW5lIiB9LCBbCiAgICAgICAgICAgICAgICBfdm0uX3YoIiBOZWVkIEhlbHA/ICIpCiAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAidi1jYXJkLXRleHQiLAogICAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogImZsZXgtd3JhcCB0ZXh0LWp1c3RpZnkganVzdGlmeS1zcGFjZS1iZXR3ZWVuIiB9LAogICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICBfYygicCIsIFsKICAgICAgICAgICAgICAgICAgICBfdm0uX3YoIlRoZSAiKSwKICAgICAgICAgICAgICAgICAgICBfYygiYiIsIFtfdm0uX3YoIk5hdmlnYXRpb24gQmFyIildKSwKICAgICAgICAgICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgICAgICAgICAiIGF0IHRoZSB0b3Agb2YgdGhlIHBhZ2UgY2FuIGJlIHVzZWQgdG8gYWNjZXNzIGFueSBwYXJ0IG9mIHRoZSB3ZWJzaXRlLiIKICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgICBfYygicCIsIFsKICAgICAgICAgICAgICAgICAgICBfYygiYiIsIFtfdm0uX3YoIkZpbHRlcnMiKV0pLAogICAgICAgICAgICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgICAgICAgICAgICIgaXMgYSBkcm9wIGRvd24gbWVudSB0aGF0IGNhbiBiZSB1c2VkIHRvIHNlYXJjaCBmb3Igc3BlY2lmaWMgdG9waWNzLCBvciBjaGFuZ2UgdGhlIHRpbWUgcGVyaW9kIG9mIHlvdXIgIgogICAgICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICAgICAgX2MoImkiLCBbX3ZtLl92KCJUcmVuZHMiKV0pLAogICAgICAgICAgICAgICAgICAgIF92bS5fdigiIGdyYXBoLiIpCiAgICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgICBfYygicCIsIFsKICAgICAgICAgICAgICAgICAgICBfYygiYiIsIFtfdm0uX3YoIlNlbGVjdGVkIFRvcGljcyIpXSksCiAgICAgICAgICAgICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAgICAgICAgICAgIiBwcm92aWRlcyBhIGxpc3Qgb2YgdGhlIHRvcGljcyBiZWluZyBkaXNwbGF5ZWQgb24gdGhlIGdyYXBoLiBZb3UgY2FuIHJlbW92ZSB0b3BpY3MgZnJvbSB0aGUgbGlzdCB3aXRoIHRoZSByZW1vdmUgYnV0dG9uLiIKICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgICBfYygicCIsIFsKICAgICAgICAgICAgICAgICAgICBfYygiYiIsIFtfdm0uX3YoIlJlbGF0ZWQgVG9waWNzIildKSwKICAgICAgICAgICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgICAgICAgICAiIHByb3ZpZGVzIGEgcmFuZ2Ugb2YgdG9waWNzIG1vc3QgcmVsYXRlZCB0byB5b3VyIGN1cnJlbnQgc2VsZWN0aW9uLiBZb3UgY2FuIGFkZCB0b3BpY3MgdG8gdGhlIGxpc3Qgd2l0aCB0aGUgYWRkIGJ1dHRvbi4iCiAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgICAgX2MoInAiLCBbCiAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCJZb3UgY2FuIHZpZXcgYSAiKSwKICAgICAgICAgICAgICAgICAgICBfYygiYiIsIFtfdm0uX3YoIlRvcGljIildKSwKICAgICAgICAgICAgICAgICAgICBfdm0uX3YoIiBieSBzZWxlY3RpbmcgaXQgZnJvbSB0aGUgYW55IHBhcnQgb2YgdGhlIHBhZ2UuIikKICAgICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICAgIF9jKCJwIiwgWwogICAgICAgICAgICAgICAgICAgIF9jKCJiIiwgW192bS5fdigiU2F2ZWQgVHJlbmRzIildKSwKICAgICAgICAgICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgICAgICAgICAiIHdpbGwgYWxsb3cgeW91IHRvIHJldmlzaXN0IHNhdmVkIHNlbGVjdGlvbnMsIHdoaWxzdCBzZWxlY3RpbmcgdGhlICIKICAgICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgICAgIF9jKCJiIiwgW192bS5fdigiU2F2ZSIpXSksCiAgICAgICAgICAgICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAgICAgICAgICAgIiBidXR0b24gd2lsbCBzYXZlIHlvdXIgY3VycmVudCBzZWxlY3Rpb24gZm9yIGxhdGVyLiBUaGlzIGlzIG9ubHkgYXZhb2lhYmxlIGZvciByZWdpc3RlcmVkIHVzZXJzLCBzbyByZW1lbWJlciB0byBsb2cgaW4hIgogICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICAgIF9jKCJwIiwgWwogICAgICAgICAgICAgICAgICAgIF92bS5fdigiWW91IGNhbiBhbHNvICIpLAogICAgICAgICAgICAgICAgICAgIF9jKCJiIiwgW192bS5fdigiQ2xlYXIiKV0pLAogICAgICAgICAgICAgICAgICAgIF92bS5fdigiIHlvdXIgc2VsZWN0aW9uIGF0IGFueSB0aW1lLiAiKQogICAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAidi1jYXJkLWFjdGlvbnMiLAogICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAidi1idG4iLAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IHdpZHRoOiAiMTAwJSIsIHJvdW5kZWQ6ICIiLCBkZXByZXNzZWQ6ICIiIH0sCiAgICAgICAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICAgICAgICBjbGljazogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgJGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpCiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF92bS5jbG9zZSgkZXZlbnQpCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIFtfdm0uX3YoIiBDbG9zZSAiKV0KICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICApCiAgICAgICAgICAgIF0sCiAgICAgICAgICAgIDEKICAgICAgICAgICkKICAgICAgICBdLAogICAgICAgIDEKICAgICAgKQogICAgXSwKICAgIDEKICApCn0KdmFyIHN0YXRpY1JlbmRlckZucyA9IFtdCnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZQoKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}