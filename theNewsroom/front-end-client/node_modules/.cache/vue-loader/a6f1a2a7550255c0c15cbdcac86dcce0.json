{"remainingRequest":"/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/theNewsroom/front-end-client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/theNewsroom/front-end-client/src/components/common/Search.vue?vue&type=style&index=0&id=7eebc88c&scoped=true&lang=css&","dependencies":[{"path":"/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/theNewsroom/front-end-client/src/components/common/Search.vue","mtime":1605511148968},{"path":"/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/theNewsroom/front-end-client/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/theNewsroom/front-end-client/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/theNewsroom/front-end-client/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/theNewsroom/front-end-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/theNewsroom/front-end-client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoudi1saXN0LWl0ZW0gewogICAganVzdGlmeS1jb250ZW50OiBjZW50ZXIgIWltcG9ydGFudDsKICAgIGZsZXgtZGlyZWN0aW9uOiByb3cgIWltcG9ydGFudDsKICAgIHRleHQtYWxpZ246IGNlbnRlciAhaW1wb3J0YW50OwogICAgYWxpZ24taXRlbXM6IGNlbnRlciAhaW1wb3J0YW50Owp9Ci5pdGVtIHsKICAgIGJhY2tncm91bmQ6IHJnYigyNDMsIDI0NSwgMjQ1KTsKfQouaXRlbTpob3ZlciB7CiAgICBiYWNrZ3JvdW5kOiByZ2IoMjM5LCAyNDAsIDI0MCk7Cn0K"},{"version":3,"sources":["Search.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Search.vue","sourceRoot":"src/components/common","sourcesContent":["<template>\n<v-dialog d-flex elevation=\"0\" v-model=\"show\" width=\"1000px\" height=\"500px\">\n    <v-card class=\"flex-wrap text-justify justify-space-between\">\n        <v-card-title class=\"headline\"> <strong>Search</strong>: {{this.keyword}}</v-card-title>\n        <v-divider />\n        <h2 class=\"subheading grey--text text-center\" v-if=\"results.length == 0\">Sorry, your search returned no results!</h2>\n        <v-card-actions v-else>\n            <v-flex align-center xs12>\n                <v-data-table :mobile-breakpoint=\"0\" :headers=\"headers\" :items=\"results\" :sort-by=\"['topicofarticlesByTopicId.totalCount']\" :sort-desc=\"[true]\">\n                    <template v-slot:item=\"{ item }\">\n                        <tr @click=\"rowClicked(item)\">\n                            <td class=\"subheading text-center\" v-text=\"item.topicofarticlesByTopicId.totalCount\" />\n                            <td class=\"subheading text-center\" v-text=\"item.name\" />\n                        </tr>\n                    </template>\n                </v-data-table>\n            </v-flex>\n        </v-card-actions>\n        <v-divider />\n        <v-card-actions>\n            <v-row dense>\n                <v-spacer />\n                <v-btn rounded depressed @click.stop=\"close\">\n                    Close\n                </v-btn>\n                <HelpSearch />\n            </v-row>\n        </v-card-actions>\n    </v-card>\n    <Popup v-model=\"popup\" />\n</v-dialog>\n</template>\n\n<script>\nimport {\n    mapState,\n    mapMutations\n} from 'vuex';\n\nimport Popup from \"./Popup\"\nimport HelpSearch from \"./HelpSearch\"\n\nimport SEARCH_FOR_TOPIC from '../../graphql/SearchForTopic.gql'\n\nexport default {\n    props: {\n        value: Boolean\n    },\n    components: {\n        Popup,\n        HelpSearch\n    },\n    computed: {\n        ...mapState(['keyword']),\n        show: {\n            get() {\n                return this.value\n            },\n            set(value) {\n                this.$emit('input', value)\n            }\n        }\n    },\n    methods: {\n        ...mapMutations([\n            'openTopic',\n        ]),\n        open(topic) {\n            this.popup = true\n            this.openTopic(topic)\n        },\n        close() {\n            this.show = false\n        },\n        rowClicked(topic) {\n            this.open(topic)\n            console.log(topic);\n        },\n    },\n    data: () => ({\n        popup: false,\n        results: [],\n        headers: [{\n                text: '# Articles',\n                value: 'topicofarticlesByTopicId.totalCount',\n                width: \"30%\",\n                align: 'center',\n            },\n            {\n                text: 'Topic',\n                value: 'name',\n                width: \"100%\",\n                align: 'center',\n            }\n        ],\n    }),\n    apollo: {\n        results: {\n            query: SEARCH_FOR_TOPIC,\n            variables() {\n                return {\n                    keyword: this.keyword\n                }\n            },\n            update(data) {\n                return data.allTopics.nodes;\n            }\n        }\n    },\n}\n\n</script>\n<style scoped>\n.v-list-item {\n    justify-content: center !important;\n    flex-direction: row !important;\n    text-align: center !important;\n    align-items: center !important;\n}\n.item {\n    background: rgb(243, 245, 245);\n}\n.item:hover {\n    background: rgb(239, 240, 240);\n}\n</style>\n"]}]}