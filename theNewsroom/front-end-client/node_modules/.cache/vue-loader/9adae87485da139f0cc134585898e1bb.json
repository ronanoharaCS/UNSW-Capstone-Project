{"remainingRequest":"/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/212MonolithFinalSoftwareQuality/theNewsroom/front-end-client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/212MonolithFinalSoftwareQuality/theNewsroom/front-end-client/src/views/Saved.vue?vue&type=style&index=0&id=5ea7993d&scoped=true&lang=css&","dependencies":[{"path":"/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/212MonolithFinalSoftwareQuality/theNewsroom/front-end-client/src/views/Saved.vue","mtime":1605530430614},{"path":"/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/212MonolithFinalSoftwareQuality/theNewsroom/front-end-client/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/212MonolithFinalSoftwareQuality/theNewsroom/front-end-client/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/212MonolithFinalSoftwareQuality/theNewsroom/front-end-client/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/212MonolithFinalSoftwareQuality/theNewsroom/front-end-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liamdale/OneDrive/Uni/COMP/20T3/capstone-project-comp3900-w17a-212-monolith/212MonolithFinalSoftwareQuality/theNewsroom/front-end-client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgp0ZCB7CiAgICB0ZXh0LWFsaWduOiBjZW50ZXIgIWltcG9ydGFudDsKfQouc2F2ZWQgewogICAgcGFkZGluZy10b3A6IDIwcHgKfQouZWRpdCB7CiAgICBtYXgtd2lkdGg6IDE1MHB4Owp9Ci5pdGVtIHsKICAgIGJhY2tncm91bmQ6IHJnYigyMzAsIDIzNSwgMjU1KTsKfQouaXRlbTpob3ZlciB7CiAgICBiYWNrZ3JvdW5kOnJnYigyMjIsIDIyOSwgMjU1KTsKfQo="},{"version":3,"sources":["Saved.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Saved.vue","sourceRoot":"src/views","sourcesContent":["<template>\n<div class=\"saved\">\n<template>\n\n    <v-container fluid>\n        <h2 class=\"subheading grey--text text-center\" v-if=\"configs.length == 0\">Looks like you haven't saved any Trends yet! You can save a selection of topics on the Trends page.</h2>\n        <v-row v-else>\n            <v-list two-line width=100% rounded>\n                <v-list-item>\n                    <HelpSaved />\n                    <span> Need Help?</span>\n\n                </v-list-item>\n                <v-list-item  class=\"item\" v-for=\"config in configs\" :key=\"config.id\" depressed hover @click.stop=\"viewTrends(config.topics)\">\n\n                    <v-col d-flex>\n                        <v-list-item-title class=\"headline\" v-text=\"config.title\" />\n                        <v-card-actions>\n                            <v-row dense>\n                                <!-- We would need ot make sure we limit the number of characters shown -->\n                                <v-col v-for=\"topic in config.topics\" :key=\"topic.id\">\n                                    <v-btn dark rounded width=100% depressed @click.stop=\"open(topic)\" v-text='topic.name' />\n                                </v-col>\n                            </v-row>\n                            <v-col class=\"edit\" dense>\n                                    <v-btn outlined text rounded width=100% depressed @click.stop=\"deleteTrend(config)\">\n                                        Delete\n                                    </v-btn>\n                            </v-col>\n                        </v-card-actions>\n                    </v-col>\n                </v-list-item>\n            </v-list>\n        </v-row>\n        <Popup v-model=\"popup\" />\n    </v-container>\n</template>\n</div>\n</template>\n\n<script>\nimport Popup from \"../components/common/Popup\";\nimport HelpSaved from \"../components/common/HelpSaved\";\nimport USER_CONFIGS from \"../graphql/AllOfAUsersConfigurations.gql\"\nimport DELETE_USER_CONFIG from \"../graphql/deleteUserConfiguration.gql\"\nimport DELETE_TOPIC_CONFIG from \"../graphql/deleteTopicConfiguration.gql\"\n\n\nimport {\n    mapMutations,\n    mapGetters\n} from 'vuex';\n\nexport default {\n    name: \"Topics\",\n    components: {\n        Popup,\n        HelpSaved\n    },\n    data: () => ({\n        trend: {\n            title: '',\n            topics: []\n        },\n        dialog: false,\n        popup: false,\n        userId: '',\n        configs: [],\n        skipQuery: false\n    }),\n    computed: {\n        ...mapGetters(['numSelected', 'getSelected', 'getRelated']),\n\n    },\n    apollo: {\n        configs: {\n            query: USER_CONFIGS,\n            variables() {\n                return {\n                    usrId: this.$auth.user.sub\n                }\n            },\n            update(data) {\n                return data.allUserconfigurations.nodes.map(a => ({\n                    id: a.id,\n                    title: a.configName,\n                    topics: a.topicconfigurationsByUsrConfigId.nodes.map(b => ({\n                        nodeId: b.id,\n                        id: b.topicId,\n                        name: b.topicName\n                    }))\n                }))\n            },\n            skip() {\n                return this.skipQuery\n            },\n        }\n    },\n    methods: {\n        ...mapMutations([\n            'openTopic',\n            'setSelected',\n        ]),\n        open(title) {\n            this.popup = true\n            this.openTopic(title)\n        },\n        viewTrends(selection) {\n            console.log(selection)\n\n            selection = selection.map(a => ({\n                    id: a.id,\n                    name: a.name\n                }))\n\n            this.setSelected(selection)\n            this.$router.push({\n                name: 'trends'\n            })\n        },\n        async getConfigs() {\n            this.$apollo.queries.configs.skip = false\n            await this.$apollo.queries.configs.refetch()\n        },\n        async deleteTrend(selection) {\n            console.log(\"Deleting saved congifuration...\")\n            await this.deleteTopicConfig(selection.topics)\n            await this.deleteUserConfig(selection.id)\n            console.log(\"Saved congifuration deleted\")\n        },\n        async deleteTopicConfig(topics) {\n            var i\n            for (i = 0; i < topics.length; i++) {\n                var id = topics[i].nodeId\n                this.$apollo.mutate({\n                    mutation: DELETE_TOPIC_CONFIG,\n                    variables: {\n                        id,\n                    }\n                })\n            }\n        },\n        async deleteUserConfig(id) {\n            this.$apollo.mutate({\n                mutation: DELETE_USER_CONFIG,\n                variables: {\n                    id,\n                },\n                update: () => {\n                    this.getConfigs()\n                },\n            })\n        },\n    },\n    mounted: function() {\n        this.getConfigs()\n    },\n}\n</script>\n\n<style scoped>\ntd {\n    text-align: center !important;\n}\n.saved {\n    padding-top: 20px\n}\n.edit {\n    max-width: 150px;\n}\n.item {\n    background: rgb(230, 235, 255);\n}\n.item:hover {\n    background:rgb(222, 229, 255);\n}\n</style>"]}]}